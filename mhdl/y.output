
state 0
	$accept: .start $end 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_MODEL  shift 9
	L_OPERATOR  shift 51
	L_PACKAGE  shift 8
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	start  goto 1
	package  goto 2
	model  goto 3
	expr  goto 4
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	model_head  goto 6
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	package_head  goto 5
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 1
	$accept:  start.$end 
	start:  start.package 
	start:  start.model 

	$end  accept
	L_MODEL  shift 9
	L_PACKAGE  shift 8
	.  error

	package  goto 55
	model  goto 56
	model_head  goto 6
	package_head  goto 5

state 2
	start:  package.    (3)

	.  reduce 3 (src line 58)


state 3
	start:  model.    (4)

	.  reduce 4 (src line 59)


state 4
	start:  expr.    (5)

	.  reduce 5 (src line 60)


state 5
	package:  package_head.package_library package_inclusion package_models package_tail ; 
	empty: .    (394)

	L_LIBRARIES  shift 60
	.  reduce 394 (src line 1169)

	empty  goto 59
	libraries  goto 58
	package_library  goto 57

state 6
	model:  model_head.model_library model_inclusions model_body model_tail ; 
	empty: .    (394)

	L_LIBRARIES  shift 60
	.  reduce 394 (src line 1169)

	empty  goto 63
	libraries  goto 62
	model_library  goto 61

7: shift/reduce conflict (shift 52(0), red'n 130(0)) on L_DOUBLE
7: shift/reduce conflict (shift 51(0), red'n 130(0)) on L_OPERATOR
7: shift/reduce conflict (shift 43(5), red'n 130(0)) on ^
7: shift/reduce conflict (shift 66(0), red'n 130(0)) on \'
7: shift/reduce conflict (shift 41(0), red'n 130(0)) on /
7: shift/reduce conflict (shift 42(0), red'n 130(0)) on *
7: shift/reduce conflict (shift 44(0), red'n 130(0)) on -
state 7
	expr:  prefix_expr.    (130)
	expr:  prefix_expr.op expr 
	physical_value:  prefix_expr.designation 

	L_DOUBLE  shift 52
	L_OPERATOR  shift 51
	^  shift 43
	\'  shift 66
	/  shift 41
	*  shift 42
	-  shift 44
	.  reduce 130 (src line 424)

	designation  goto 65
	op  goto 64
	operator  goto 40

state 8
	package_head:  L_PACKAGE.simple_name 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 67

state 9
	model_head:  L_MODEL.simple_name 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 70

state 10
	prefix_expr:  case_expr.    (255)

	.  reduce 255 (src line 788)


state 11
	prefix_expr:  cond_expr.    (256)

	.  reduce 256 (src line 790)


state 12
	prefix_expr:  derivative.    (257)

	.  reduce 257 (src line 792)


state 13
	prefix_expr:  function_apply.    (258)

	.  reduce 258 (src line 794)


state 14
	prefix_expr:  integral.    (259)

	.  reduce 259 (src line 796)


state 15
	prefix_expr:  lambda_abstract.    (260)

	.  reduce 260 (src line 798)


state 16
	prefix_expr:  let_expr.    (261)

	.  reduce 261 (src line 800)


state 17
	prefix_expr:  operator_apply.    (262)

	.  reduce 262 (src line 802)


state 18
	prefix_expr:  physical_value.    (263)

	.  reduce 263 (src line 804)


state 19
	prefix_expr:  primitive_value.    (264)

	.  reduce 264 (src line 806)


20: shift/reduce conflict (shift 71(0), red'n 265(0)) on (
state 20
	function_apply:  simple_pattern_expr.( function_args ) 
	prefix_expr:  simple_pattern_expr.    (265)

	(  shift 71
	.  reduce 265 (src line 808)


state 21
	prefix_expr:  struct_func_create.    (266)

	.  reduce 266 (src line 810)


state 22
	prefix_expr:  typed_expr.    (267)

	.  reduce 267 (src line 812)


state 23
	case_expr:  L_CASE.expr L_OF { alternatives } 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 72
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 24
	cond_expr:  L_IF.expr L_THEN expr L_ELSE expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 73
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 25
	derivative:  L_DERIVATIVE.( L_IDENTIFIER ) ( expr ) 

	(  shift 74
	.  error


state 26
	integral:  L_INTEGRAL.( L_IDENTIFIER ) integral_expr ( expr ) 

	(  shift 75
	.  error


state 27
	lambda_abstract:  \\.( patterns ) L_RARROW expr 

	(  shift 76
	.  error


state 28
	let_expr:  L_LET.nested_defs L_IN expr 

	{  shift 78
	.  error

	nested_defs  goto 77

state 29
	operator_apply:  op.expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 79
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 30
	primitive_value:  L_PRIMITIVE.expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 80
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 31
	simple_pattern_expr:  name.    (286)
	variable:  name.    (384)

	@  reduce 384 (src line 1141)
	.  reduce 286 (src line 868)


state 32
	simple_pattern_expr:  variable.@ simple_pattern_expr 

	@  shift 81
	.  error


state 33
	simple_pattern_expr:  ~.simple_pattern_expr 

	L_CHAR  shift 49
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_INTEGER  shift 47
	L_STRING  shift 50
	~  shift 33
	(  shift 83
	_  shift 34
	[  shift 38
	.  error

	simple_name  goto 45
	name  goto 31
	simple_pattern_expr  goto 82
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	selected_names  goto 54
	variable  goto 32

state 34
	simple_pattern_expr:  _.    (289)

	.  reduce 289 (src line 876)


state 35
	simple_pattern_expr:  literal.    (290)

	.  reduce 290 (src line 878)


state 36
	simple_pattern_expr:  null.    (291)

	.  reduce 291 (src line 880)


state 37
	null:  (.) 
	property_names:  (.exprs ) 
	property_names:  (.expr ) 
	simple_name:  (.op ) 
	simple_pattern_expr:  (.expr ) 
	simple_pattern_expr:  (.exprs ) 
	simple_pattern_expr:  (.pattern patterns ) 
	typed_expr:  (.expr L_COLONS type_spec where_context ) 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	)  shift 84
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 86
	simple_name  goto 45
	pattern  goto 88
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 87
	exprs  goto 85
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 38
	simple_pattern_expr:  [.list ] 
	empty: .    (394)

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  reduce 394 (src line 1169)

	expr  goto 91
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	empty  goto 90
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	exprs  goto 92
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	list  goto 89
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 39
	struct_func_create:  property_names.L_LTEQEQ name property_names 

	L_LTEQEQ  shift 93
	.  error


state 40
	op:  operator.    (233)

	.  reduce 233 (src line 719)


state 41
	op:  /.    (234)

	.  reduce 234 (src line 721)


state 42
	op:  *.    (235)

	.  reduce 235 (src line 726)


state 43
	op:  ^.    (236)

	.  reduce 236 (src line 731)


state 44
	op:  -.    (237)

	.  reduce 237 (src line 736)


state 45
	name:  simple_name.    (220)

	.  reduce 220 (src line 678)


state 46
	name:  selected_name.    (221)

	.  reduce 221 (src line 680)


state 47
	literal:  L_INTEGER.    (193)

	.  reduce 193 (src line 601)


state 48
	literal:  L_FLOAT.    (194)

	.  reduce 194 (src line 605)


state 49
	literal:  L_CHAR.    (195)

	.  reduce 195 (src line 609)


state 50
	literal:  L_STRING.    (196)

	.  reduce 196 (src line 613)


state 51
	operator:  L_OPERATOR.    (238)

	.  reduce 238 (src line 742)


state 52
	operator:  L_DOUBLE.name L_DOUBLE 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 94
	selected_name  goto 46
	selected_names  goto 54

state 53
	selected_names:  L_IDENTIFIER.    (283)
	simple_name:  L_IDENTIFIER.    (284)

	.  reduce 283 (src line 856)
	.  reduce 284 (src line 861)


state 54
	selected_name:  selected_names.. simple_name 
	selected_names:  selected_names.. L_IDENTIFIER 

	.  shift 95
	.  error


state 55
	start:  start package.    (1)

	.  reduce 1 (src line 56)


state 56
	start:  start model.    (2)

	.  reduce 2 (src line 57)


state 57
	package:  package_head package_library.package_inclusion package_models package_tail ; 
	empty: .    (394)

	L_INCLUDES  shift 99
	.  reduce 394 (src line 1169)

	empty  goto 98
	inclusions  goto 97
	package_inclusion  goto 96

state 58
	package_library:  libraries.    (247)

	.  reduce 247 (src line 770)


state 59
	package_library:  empty.    (248)

	.  reduce 248 (src line 771)


state 60
	libraries:  L_LIBRARIES.library_names ; 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 101
	library_names  goto 100

state 61
	model:  model_head model_library.model_inclusions model_body model_tail ; 
	empty: .    (394)

	L_INCLUDES  shift 99
	.  reduce 394 (src line 1169)

	empty  goto 104
	inclusions  goto 103
	model_inclusions  goto 102

state 62
	model_library:  libraries.    (203)

	.  reduce 203 (src line 636)


state 63
	model_library:  empty.    (204)

	.  reduce 204 (src line 637)


state 64
	expr:  prefix_expr op.expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 105
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 65
	physical_value:  prefix_expr designation.    (254)

	.  reduce 254 (src line 786)


state 66
	designation:  \'.designation_indicators \' 

	L_IDENTIFIER  shift 53
	(  shift 108
	.  error

	simple_name  goto 45
	name  goto 111
	designation_indicators  goto 106
	indicators  goto 107
	indicator_list  goto 109
	indicator  goto 110
	selected_name  goto 46
	selected_names  goto 54

state 67
	package_head:  L_PACKAGE simple_name.    (242)

	.  reduce 242 (src line 759)


state 68
	simple_name:  L_IDENTIFIER.    (284)

	.  reduce 284 (src line 861)


state 69
	simple_name:  (.op ) 

	L_DOUBLE  shift 52
	L_OPERATOR  shift 51
	^  shift 43
	/  shift 41
	*  shift 42
	-  shift 44
	.  error

	op  goto 112
	operator  goto 40

state 70
	model_head:  L_MODEL simple_name.    (198)

	.  reduce 198 (src line 625)


state 71
	function_apply:  simple_pattern_expr (.function_args ) 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 114
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	exprs  goto 115
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	function_args  goto 113
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 72
	case_expr:  L_CASE expr.L_OF { alternatives } 

	L_OF  shift 116
	.  error


state 73
	cond_expr:  L_IF expr.L_THEN expr L_ELSE expr 

	L_THEN  shift 117
	.  error


state 74
	derivative:  L_DERIVATIVE (.L_IDENTIFIER ) ( expr ) 

	L_IDENTIFIER  shift 118
	.  error


state 75
	integral:  L_INTEGRAL (.L_IDENTIFIER ) integral_expr ( expr ) 

	L_IDENTIFIER  shift 119
	.  error


state 76
	lambda_abstract:  \\ (.patterns ) L_RARROW expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 122
	simple_name  goto 45
	pattern  goto 121
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	patterns  goto 120
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 77
	let_expr:  L_LET nested_defs.L_IN expr 

	L_IN  shift 123
	.  error


state 78
	nested_defs:  {.nested_def_list } 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_COERCION  shift 128
	L_DEFAULT  shift 132
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 135
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 134
	simple_name  goto 45
	name  goto 136
	case_expr  goto 10
	cond_expr  goto 11
	label  goto 131
	value_def  goto 127
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	name_def  goto 126
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	named_values  goto 129
	names  goto 133
	nested_def  goto 125
	nested_def_list  goto 124
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	value_def_target  goto 130

state 79
	operator_apply:  op expr.    (240)

	.  reduce 240 (src line 749)


state 80
	primitive_value:  L_PRIMITIVE expr.    (268)

	.  reduce 268 (src line 815)


state 81
	simple_pattern_expr:  variable @.simple_pattern_expr 

	L_CHAR  shift 49
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_INTEGER  shift 47
	L_STRING  shift 50
	~  shift 33
	(  shift 83
	_  shift 34
	[  shift 38
	.  error

	simple_name  goto 45
	name  goto 31
	simple_pattern_expr  goto 137
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	selected_names  goto 54
	variable  goto 32

state 82
	simple_pattern_expr:  ~ simple_pattern_expr.    (288)

	.  reduce 288 (src line 874)


state 83
	null:  (.) 
	simple_name:  (.op ) 
	simple_pattern_expr:  (.expr ) 
	simple_pattern_expr:  (.exprs ) 
	simple_pattern_expr:  (.pattern patterns ) 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	)  shift 84
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 138
	simple_name  goto 45
	pattern  goto 88
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 87
	exprs  goto 139
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 84
	null:  ( ).    (232)

	.  reduce 232 (src line 716)


state 85
	exprs:  exprs., expr 
	property_names:  ( exprs.) 
	simple_pattern_expr:  ( exprs.) 

	,  shift 140
	)  shift 141
	.  error


state 86
	exprs:  expr., expr 
	pattern:  expr.    (251)
	property_names:  ( expr.) 
	simple_pattern_expr:  ( expr.) 
	typed_expr:  ( expr.L_COLONS type_spec where_context ) 

	L_COLONS  shift 144
	,  shift 142
	)  shift 143
	.  reduce 251 (src line 778)


state 87
	operator_apply:  op.expr 
	simple_name:  ( op.) 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	)  shift 145
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 79
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 88
	simple_pattern_expr:  ( pattern.patterns ) 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 122
	simple_name  goto 45
	pattern  goto 121
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	patterns  goto 146
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 89
	simple_pattern_expr:  [ list.] 

	]  shift 147
	.  error


state 90
	list:  empty.    (186)

	.  reduce 186 (src line 586)


state 91
	exprs:  expr., expr 
	list:  expr.    (187)
	list:  expr.| qualifiers 
	list:  expr.L_DOTS expr 
	list:  expr., expr L_DOTS 
	list:  expr.L_DOTS 

	L_DOTS  shift 150
	|  shift 149
	,  shift 148
	.  reduce 187 (src line 588)


state 92
	exprs:  exprs., expr 
	list:  exprs.    (188)

	,  shift 140
	.  reduce 188 (src line 590)


state 93
	struct_func_create:  property_names L_LTEQEQ.name property_names 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 151
	selected_name  goto 46
	selected_names  goto 54

state 94
	operator:  L_DOUBLE name.L_DOUBLE 

	L_DOUBLE  shift 152
	.  error


state 95
	selected_name:  selected_names ..simple_name 
	selected_names:  selected_names ..L_IDENTIFIER 

	L_IDENTIFIER  shift 154
	(  shift 69
	.  error

	simple_name  goto 153

state 96
	package:  package_head package_library package_inclusion.package_models package_tail ; 
	empty: .    (394)

	L_ASSOCIATE  shift 188
	L_ATTRIBUTE  shift 198
	L_CASE  shift 23
	L_CHAR  shift 49
	L_CLASS  shift 185
	L_COERCION  shift 128
	L_CONFIGURATION  shift 189
	L_CONNECT  shift 191
	L_CONSTRAINT  shift 192
	L_DEFAULT  shift 132
	L_DERIVATIVE  shift 25
	L_DIMENSION  shift 168
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_FOR  shift 205
	L_IDENTIFIER  shift 135
	L_IF  shift 204
	L_INSTANCE  shift 186
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_MULTIPLIER  shift 170
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_SIGNAL  shift 199
	L_STRING  shift 50
	L_STRUCTURE  shift 196
	L_TABLE  shift 203
	L_TYPE  shift 197
	L_UNIT  shift 184
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  reduce 394 (src line 1169)

	expr  goto 193
	abs_prop_def  goto 171
	property_kind  goto 187
	simple_name  goto 45
	associate_def  goto 172
	name  goto 136
	case_expr  goto 10
	empty  goto 157
	class_def  goto 159
	class_header  goto 167
	cond_expr  goto 11
	config_def  goto 173
	connections  goto 174
	label  goto 190
	constraint_def  goto 175
	value_def  goto 180
	deferred_type_def  goto 182
	derivative  goto 12
	dim_def  goto 160
	op  goto 29
	equation_def  goto 176
	prefix_expr  goto 7
	for_generate_header  goto 201
	function_apply  goto 13
	simple_pattern_expr  goto 20
	name_def  goto 178
	generate_def  goto 177
	generate_header  goto 194
	if_generate_header  goto 200
	table_generate_header  goto 202
	struct_item  goto 163
	struct_def  goto 164
	instance_header  goto 169
	instance_def  goto 161
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	model_items  goto 156
	model_item  goto 158
	multiplier_spec  goto 162
	type_def  goto 165
	unit_def  goto 166
	selected_name  goto 46
	named_values  goto 129
	names  goto 133
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	package_models  goto 155
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	specified_type_def  goto 183
	struct_def_head  goto 181
	table_def  goto 179
	table_head  goto 195
	value_def_target  goto 130

state 97
	inclusions:  inclusions.L_INCLUDES visibility_item ; 
	package_inclusion:  inclusions.    (245)

	L_INCLUDES  shift 206
	.  reduce 245 (src line 767)


state 98
	package_inclusion:  empty.    (246)

	.  reduce 246 (src line 768)


state 99
	inclusions:  L_INCLUDES.visibility_item ; 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 210
	exposure_clause  goto 208
	exposures  goto 211
	exposure_item  goto 212
	hiding_clause  goto 209
	visibility_item  goto 207
	selected_name  goto 46
	selected_names  goto 54

state 100
	libraries:  L_LIBRARIES library_names.; 
	library_names:  library_names., simple_name 

	,  shift 214
	;  shift 213
	.  error


state 101
	library_names:  simple_name.    (185)

	.  reduce 185 (src line 583)


state 102
	model:  model_head model_library model_inclusions.model_body model_tail ; 
	empty: .    (394)

	L_ASSOCIATE  shift 188
	L_ATTRIBUTE  shift 198
	L_CASE  shift 23
	L_CHAR  shift 49
	L_CLASS  shift 185
	L_COERCION  shift 128
	L_CONFIGURATION  shift 189
	L_CONNECT  shift 191
	L_CONSTRAINT  shift 192
	L_DEFAULT  shift 132
	L_DERIVATIVE  shift 25
	L_DIMENSION  shift 168
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_FOR  shift 205
	L_IDENTIFIER  shift 135
	L_IF  shift 204
	L_INSTANCE  shift 186
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_MULTIPLIER  shift 170
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_SIGNAL  shift 199
	L_STRING  shift 50
	L_STRUCTURE  shift 196
	L_TABLE  shift 203
	L_TYPE  shift 197
	L_UNIT  shift 184
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  reduce 394 (src line 1169)

	expr  goto 193
	abs_prop_def  goto 171
	property_kind  goto 187
	simple_name  goto 45
	associate_def  goto 172
	name  goto 136
	case_expr  goto 10
	empty  goto 217
	class_def  goto 159
	class_header  goto 167
	cond_expr  goto 11
	config_def  goto 173
	connections  goto 174
	label  goto 190
	constraint_def  goto 175
	value_def  goto 180
	deferred_type_def  goto 182
	derivative  goto 12
	dim_def  goto 160
	op  goto 29
	equation_def  goto 176
	prefix_expr  goto 7
	for_generate_header  goto 201
	function_apply  goto 13
	simple_pattern_expr  goto 20
	name_def  goto 178
	generate_def  goto 177
	generate_header  goto 194
	if_generate_header  goto 200
	table_generate_header  goto 202
	struct_item  goto 163
	struct_def  goto 164
	instance_header  goto 169
	instance_def  goto 161
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	model_body  goto 215
	model_items  goto 216
	model_item  goto 158
	multiplier_spec  goto 162
	type_def  goto 165
	unit_def  goto 166
	selected_name  goto 46
	named_values  goto 129
	names  goto 133
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	specified_type_def  goto 183
	struct_def_head  goto 181
	table_def  goto 179
	table_head  goto 195
	value_def_target  goto 130

state 103
	inclusions:  inclusions.L_INCLUDES visibility_item ; 
	model_inclusions:  inclusions.    (201)

	L_INCLUDES  shift 206
	.  reduce 201 (src line 633)


state 104
	model_inclusions:  empty.    (202)

	.  reduce 202 (src line 634)


state 105
	expr:  prefix_expr op expr.    (131)

	.  reduce 131 (src line 426)


state 106
	designation:  \' designation_indicators.\' 

	\'  shift 218
	.  error


state 107
	designation_indicators:  indicators.    (101)
	designation_indicators:  indicators./ indicators 

	/  shift 219
	.  reduce 101 (src line 350)


state 108
	designation_indicators:  (.designation_indicators ) 
	indicators:  (.indicator_list ) 
	indicator:  (.indicator ) 
	simple_name:  (.op ) 

	L_DOUBLE  shift 52
	L_IDENTIFIER  shift 53
	L_OPERATOR  shift 51
	^  shift 43
	(  shift 108
	/  shift 41
	*  shift 42
	-  shift 44
	.  error

	simple_name  goto 45
	name  goto 111
	designation_indicators  goto 220
	indicators  goto 107
	indicator_list  goto 221
	indicator  goto 222
	op  goto 112
	selected_name  goto 46
	operator  goto 40
	selected_names  goto 54

state 109
	indicators:  indicator_list.    (107)
	indicator_list:  indicator_list.* indicator 

	*  shift 223
	.  reduce 107 (src line 367)


state 110
	indicator_list:  indicator.    (109)

	.  reduce 109 (src line 372)


state 111
	indicator:  name.^ indicator_exp 
	indicator:  name.    (112)

	^  shift 224
	.  reduce 112 (src line 381)


state 112
	simple_name:  ( op.) 

	)  shift 145
	.  error


state 113
	function_apply:  simple_pattern_expr ( function_args.) 

	)  shift 225
	.  error


state 114
	exprs:  expr., expr 
	function_args:  expr.    (136)

	,  shift 142
	.  reduce 136 (src line 446)


state 115
	exprs:  exprs., expr 
	function_args:  exprs.    (137)

	,  shift 140
	.  reduce 137 (src line 448)


state 116
	case_expr:  L_CASE expr L_OF.{ alternatives } 

	{  shift 226
	.  error


state 117
	cond_expr:  L_IF expr L_THEN.expr L_ELSE expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 227
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 118
	derivative:  L_DERIVATIVE ( L_IDENTIFIER.) ( expr ) 

	)  shift 228
	.  error


state 119
	integral:  L_INTEGRAL ( L_IDENTIFIER.) integral_expr ( expr ) 

	)  shift 229
	.  error


state 120
	lambda_abstract:  \\ ( patterns.) L_RARROW expr 
	patterns:  patterns., pattern 

	,  shift 231
	)  shift 230
	.  error


state 121
	patterns:  pattern.    (253)

	.  reduce 253 (src line 783)


state 122
	pattern:  expr.    (251)

	.  reduce 251 (src line 778)


state 123
	let_expr:  L_LET nested_defs L_IN.expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 232
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 124
	nested_defs:  { nested_def_list.} 
	nested_def_list:  nested_def_list.nested_def ; 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_COERCION  shift 128
	L_DEFAULT  shift 132
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 135
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	}  shift 233
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 134
	simple_name  goto 45
	name  goto 136
	case_expr  goto 10
	cond_expr  goto 11
	label  goto 131
	value_def  goto 127
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	name_def  goto 126
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	named_values  goto 129
	names  goto 133
	nested_def  goto 234
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	value_def_target  goto 130

state 125
	nested_def_list:  nested_def.; 

	;  shift 235
	.  error


state 126
	nested_def:  name_def.    (227)

	.  reduce 227 (src line 703)


state 127
	nested_def:  value_def.    (228)

	.  reduce 228 (src line 705)


state 128
	name_def:  L_COERCION.named_values L_COLONS type_spec where_context 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 237
	selected_name  goto 46
	named_values  goto 236
	names  goto 133
	selected_names  goto 54

state 129
	name_def:  named_values.L_COLONS type_spec where_context 

	L_COLONS  shift 238
	.  error


state 130
	value_def:  value_def_target.rhs 

	|  shift 244
	=  shift 241
	.  error

	guards  goto 242
	guard  goto 243
	rhs  goto 239
	rhs_guard  goto 240

state 131
	value_def:  label.L_DEFAULT value_def_target rhs 

	L_DEFAULT  shift 245
	.  error


state 132
	value_def:  L_DEFAULT.value_def_target rhs 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 134
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	value_def_target  goto 246

state 133
	named_values:  names.    (224)
	names:  names., name 

	,  shift 247
	.  reduce 224 (src line 692)


state 134
	value_def_target:  expr.    (383)

	.  reduce 383 (src line 1138)


state 135
	label:  L_IDENTIFIER.: 
	selected_names:  L_IDENTIFIER.    (283)
	simple_name:  L_IDENTIFIER.    (284)

	:  shift 248
	.  reduce 283 (src line 856)
	.  reduce 284 (src line 861)


state 136
	names:  name.    (226)
	simple_pattern_expr:  name.    (286)
	variable:  name.    (384)

	L_COLONS  reduce 226 (src line 698)
	@  reduce 384 (src line 1141)
	,  reduce 226 (src line 698)
	.  reduce 286 (src line 868)


state 137
	simple_pattern_expr:  variable @ simple_pattern_expr.    (287)

	.  reduce 287 (src line 872)


state 138
	exprs:  expr., expr 
	pattern:  expr.    (251)
	simple_pattern_expr:  ( expr.) 

	,  shift 142
	)  shift 249
	.  reduce 251 (src line 778)


state 139
	exprs:  exprs., expr 
	simple_pattern_expr:  ( exprs.) 

	,  shift 140
	)  shift 250
	.  error


state 140
	exprs:  exprs ,.expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 251
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 141
	property_names:  ( exprs ).    (271)
	simple_pattern_expr:  ( exprs ).    (293)

	L_LTEQEQ  reduce 271 (src line 823)
	.  reduce 293 (src line 884)


state 142
	exprs:  expr ,.expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 252
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 143
	property_names:  ( expr ).    (272)
	simple_pattern_expr:  ( expr ).    (292)

	L_LTEQEQ  reduce 272 (src line 825)
	.  reduce 292 (src line 882)


state 144
	typed_expr:  ( expr L_COLONS.type_spec where_context ) 

	L_COMPONENT  shift 260
	L_CONNECTOR  shift 261
	L_CONSTRAINT  shift 262
	L_DEFINITION  shift 263
	L_DIMENSION  shift 264
	L_EQUATION  shift 265
	L_FUNCTION  shift 266
	L_IDENTIFIER  shift 53
	L_MODEL  shift 267
	L_PROPERTY  shift 268
	L_STRUCTURE  shift 269
	L_TYPE  shift 270
	L_UNIT  shift 271
	(  shift 258
	[  shift 259
	.  error

	type_spec  goto 253
	simple_name  goto 45
	name  goto 255
	def_designator  goto 257
	selected_name  goto 46
	selected_names  goto 54
	type_component  goto 254
	type_term  goto 256

state 145
	simple_name:  ( op ).    (285)

	.  reduce 285 (src line 865)


state 146
	patterns:  patterns., pattern 
	simple_pattern_expr:  ( pattern patterns.) 

	,  shift 231
	)  shift 272
	.  error


state 147
	simple_pattern_expr:  [ list ].    (295)

	.  reduce 295 (src line 888)


state 148
	exprs:  expr ,.expr 
	list:  expr ,.expr L_DOTS 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 273
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 149
	list:  expr |.qualifiers 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 277
	simple_name  goto 45
	pattern  goto 276
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	qualifiers  goto 274
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	qualifier  goto 275
	selected_names  goto 54
	variable  goto 32

state 150
	list:  expr L_DOTS.expr 
	list:  expr L_DOTS.    (192)

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  reduce 192 (src line 598)

	expr  goto 278
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 151
	struct_func_create:  property_names L_LTEQEQ name.property_names 

	(  shift 280
	.  error

	property_names  goto 279

state 152
	operator:  L_DOUBLE name L_DOUBLE.    (239)

	.  reduce 239 (src line 746)


state 153
	selected_name:  selected_names . simple_name.    (281)

	.  reduce 281 (src line 848)


state 154
	selected_names:  selected_names . L_IDENTIFIER.    (282)
	simple_name:  L_IDENTIFIER.    (284)

	.  reduce 282 (src line 851)
	.  reduce 284 (src line 861)


state 155
	package:  package_head package_library package_inclusion package_models.package_tail ; 
	empty: .    (394)

	L_END  shift 282
	.  reduce 394 (src line 1169)

	empty  goto 283
	package_tail  goto 281

state 156
	model_items:  model_items.model_item ; 
	package_models:  model_items.    (249)

	L_ASSOCIATE  shift 188
	L_ATTRIBUTE  shift 198
	L_CASE  shift 23
	L_CHAR  shift 49
	L_CLASS  shift 185
	L_COERCION  shift 128
	L_CONFIGURATION  shift 189
	L_CONNECT  shift 191
	L_CONSTRAINT  shift 192
	L_DEFAULT  shift 132
	L_DERIVATIVE  shift 25
	L_DIMENSION  shift 168
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_FOR  shift 205
	L_IDENTIFIER  shift 135
	L_IF  shift 204
	L_INSTANCE  shift 186
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_MULTIPLIER  shift 170
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_SIGNAL  shift 199
	L_STRING  shift 50
	L_STRUCTURE  shift 196
	L_TABLE  shift 203
	L_TYPE  shift 197
	L_UNIT  shift 184
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  reduce 249 (src line 773)

	expr  goto 193
	abs_prop_def  goto 171
	property_kind  goto 187
	simple_name  goto 45
	associate_def  goto 172
	name  goto 136
	case_expr  goto 10
	class_def  goto 159
	class_header  goto 167
	cond_expr  goto 11
	config_def  goto 173
	connections  goto 174
	label  goto 190
	constraint_def  goto 175
	value_def  goto 180
	deferred_type_def  goto 182
	derivative  goto 12
	dim_def  goto 160
	op  goto 29
	equation_def  goto 176
	prefix_expr  goto 7
	for_generate_header  goto 201
	function_apply  goto 13
	simple_pattern_expr  goto 20
	name_def  goto 178
	generate_def  goto 177
	generate_header  goto 194
	if_generate_header  goto 200
	table_generate_header  goto 202
	struct_item  goto 163
	struct_def  goto 164
	instance_header  goto 169
	instance_def  goto 161
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	model_item  goto 284
	multiplier_spec  goto 162
	type_def  goto 165
	unit_def  goto 166
	selected_name  goto 46
	named_values  goto 129
	names  goto 133
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	specified_type_def  goto 183
	struct_def_head  goto 181
	table_def  goto 179
	table_head  goto 195
	value_def_target  goto 130

state 157
	package_models:  empty.    (250)

	.  reduce 250 (src line 775)


state 158
	model_items:  model_item.; 

	;  shift 285
	.  error


state 159
	model_item:  class_def.    (209)

	.  reduce 209 (src line 649)


state 160
	model_item:  dim_def.    (210)

	.  reduce 210 (src line 651)


state 161
	model_item:  instance_def.    (211)

	.  reduce 211 (src line 653)


state 162
	model_item:  multiplier_spec.    (212)

	.  reduce 212 (src line 657)


state 163
	model_item:  struct_item.    (213)

	.  reduce 213 (src line 659)


state 164
	model_item:  struct_def.    (214)

	.  reduce 214 (src line 661)


state 165
	model_item:  type_def.    (215)

	.  reduce 215 (src line 663)


state 166
	model_item:  unit_def.    (216)

	.  reduce 216 (src line 665)


state 167
	class_def:  class_header.class_types class_body where_context 

	L_COMPONENT  shift 260
	L_CONNECTOR  shift 261
	L_CONSTRAINT  shift 262
	L_DEFINITION  shift 263
	L_DIMENSION  shift 264
	L_EQUATION  shift 265
	L_FUNCTION  shift 266
	L_IDENTIFIER  shift 53
	L_MODEL  shift 267
	L_PROPERTY  shift 268
	L_STRUCTURE  shift 269
	L_TYPE  shift 270
	L_UNIT  shift 271
	(  shift 258
	[  shift 259
	.  error

	type_spec  goto 287
	simple_name  goto 45
	name  goto 255
	class_types  goto 286
	def_designator  goto 257
	selected_name  goto 46
	selected_names  goto 54
	type_component  goto 254
	type_term  goto 256

state 168
	dim_def:  L_DIMENSION.L_IDENTIFIER dim_body unit_variations 

	L_IDENTIFIER  shift 288
	.  error


state 169
	instance_def:  instance_header.instance_spec instance_body where_context 
	empty: .    (394)

	L_COMPONENT  shift 260
	L_CONNECTOR  shift 261
	L_CONSTRAINT  shift 262
	L_DEFINITION  shift 263
	L_DIMENSION  shift 264
	L_EQUATION  shift 265
	L_FUNCTION  shift 266
	L_IDENTIFIER  shift 53
	L_MODEL  shift 267
	L_PROPERTY  shift 268
	L_STRUCTURE  shift 269
	L_TYPE  shift 270
	L_UNIT  shift 271
	(  shift 258
	[  shift 259
	.  reduce 394 (src line 1169)

	type_spec  goto 294
	simple_name  goto 293
	name  goto 255
	empty  goto 291
	instance_spec  goto 289
	def_designator  goto 257
	type_specs  goto 290
	selected_name  goto 46
	selected_names  goto 54
	type_item  goto 292
	type_component  goto 254
	type_term  goto 256

state 170
	multiplier_spec:  L_MULTIPLIER.L_IDENTIFIER = multiplier_tail unit_variations 

	L_IDENTIFIER  shift 295
	.  error


state 171
	struct_item:  abs_prop_def.    (321)

	.  reduce 321 (src line 966)


state 172
	struct_item:  associate_def.    (322)

	.  reduce 322 (src line 968)


state 173
	struct_item:  config_def.    (323)

	.  reduce 323 (src line 970)


state 174
	struct_item:  connections.    (324)

	.  reduce 324 (src line 972)


state 175
	struct_item:  constraint_def.    (325)

	.  reduce 325 (src line 974)


state 176
	struct_item:  equation_def.    (326)

	.  reduce 326 (src line 976)


state 177
	struct_item:  generate_def.    (327)

	.  reduce 327 (src line 978)


state 178
	struct_item:  name_def.    (328)

	.  reduce 328 (src line 980)


state 179
	struct_item:  table_def.    (329)

	.  reduce 329 (src line 982)


state 180
	struct_item:  value_def.    (330)

	.  reduce 330 (src line 984)


state 181
	struct_def:  struct_def_head.struct_inclusion struct_conns struct_comps struct_defs L_END struct_def_tail 
	empty: .    (394)

	L_INCLUDES  shift 99
	.  reduce 394 (src line 1169)

	empty  goto 298
	inclusions  goto 297
	struct_inclusion  goto 296

state 182
	type_def:  deferred_type_def.    (357)

	.  reduce 357 (src line 1065)


state 183
	type_def:  specified_type_def.    (358)

	.  reduce 358 (src line 1067)


state 184
	unit_def:  L_UNIT.L_IDENTIFIER L_OF name eq_designation unit_convert unit_variations 

	L_IDENTIFIER  shift 299
	.  error


state 185
	class_header:  L_CLASS.simple_name 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 300

state 186
	instance_header:  L_INSTANCE.simple_name 
	instance_header:  L_INSTANCE.op 

	L_DOUBLE  shift 52
	L_IDENTIFIER  shift 68
	L_OPERATOR  shift 51
	^  shift 43
	(  shift 69
	/  shift 41
	*  shift 42
	-  shift 44
	.  error

	simple_name  goto 301
	op  goto 302
	operator  goto 40

state 187
	abs_prop_def:  property_kind.abs_prop_names : type_spec 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	abs_prop_names  goto 303
	simple_name  goto 304

state 188
	associate_def:  L_ASSOCIATE.associate_defs 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	associate_defs  goto 305
	name  goto 306
	selected_name  goto 46
	selected_names  goto 54

state 189
	config_def:  L_CONFIGURATION.simple_name config_body L_END config_def_tail 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 307

state 190
	connections:  label.L_CONNECT conn_specs 
	equation_def:  label.expr 
	value_def:  label.L_DEFAULT value_def_target rhs 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_CONNECT  shift 308
	L_DEFAULT  shift 245
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 309
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 191
	connections:  L_CONNECT.conn_specs 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 312
	conn_specs  goto 310
	conn_spec  goto 311
	selected_name  goto 46
	selected_names  goto 54

state 192
	constraint_def:  L_CONSTRAINT.simple_name : expr constraint_report 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 313

state 193
	equation_def:  expr.    (122)
	value_def_target:  expr.    (383)

	;  reduce 122 (src line 405)
	.  reduce 383 (src line 1138)


state 194
	generate_def:  generate_header.L_GENERATE generate_body L_END L_GENERATE 

	L_GENERATE  shift 314
	.  error


state 195
	table_def:  table_head.table_header table_column column_names table_data table_tail 
	empty: .    (394)

	L_TITLE  shift 316
	.  reduce 394 (src line 1169)

	empty  goto 317
	table_header  goto 315

state 196
	struct_def_head:  L_STRUCTURE.simple_name 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 318

state 197
	deferred_type_def:  L_TYPE.simple_name where_context 
	specified_type_def:  L_TYPE.type_header = type_specifier where_context 

	L_COMPONENT  shift 260
	L_CONNECTOR  shift 261
	L_CONSTRAINT  shift 262
	L_DEFINITION  shift 263
	L_DIMENSION  shift 264
	L_EQUATION  shift 265
	L_FUNCTION  shift 266
	L_IDENTIFIER  shift 53
	L_MODEL  shift 267
	L_PROPERTY  shift 268
	L_STRUCTURE  shift 269
	L_TYPE  shift 270
	L_UNIT  shift 271
	(  shift 258
	[  shift 259
	.  error

	type_spec  goto 321
	simple_name  goto 319
	name  goto 255
	def_designator  goto 257
	selected_name  goto 46
	selected_names  goto 54
	type_header  goto 320
	type_component  goto 254
	type_term  goto 256

state 198
	property_kind:  L_ATTRIBUTE.    (269)

	.  reduce 269 (src line 818)


state 199
	property_kind:  L_SIGNAL.    (270)

	.  reduce 270 (src line 820)


state 200
	generate_header:  if_generate_header.    (146)

	.  reduce 146 (src line 474)


state 201
	generate_header:  for_generate_header.    (147)

	.  reduce 147 (src line 476)


state 202
	generate_header:  table_generate_header.    (148)

	.  reduce 148 (src line 478)


state 203
	table_head:  L_TABLE.simple_name 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 322

state 204
	cond_expr:  L_IF.expr L_THEN expr L_ELSE expr 
	if_generate_header:  L_IF.expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 323
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 205
	for_generate_header:  L_FOR.L_EACH generate_obj_kind simple_name for_tail 
	table_generate_header:  L_FOR.L_EACH L_ROW L_IN L_TABLE name 
	table_generate_header:  L_FOR.L_EACH L_ROW simple_name L_IN L_TABLE name 

	L_EACH  shift 324
	.  error


state 206
	inclusions:  inclusions L_INCLUDES.visibility_item ; 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 210
	exposure_clause  goto 208
	exposures  goto 211
	exposure_item  goto 212
	hiding_clause  goto 209
	visibility_item  goto 325
	selected_name  goto 46
	selected_names  goto 54

state 207
	inclusions:  L_INCLUDES visibility_item.; 

	;  shift 326
	.  error


state 208
	visibility_item:  exposure_clause.    (388)

	.  reduce 388 (src line 1154)


state 209
	visibility_item:  hiding_clause.    (389)

	.  reduce 389 (src line 1155)


state 210
	exposure_item:  name.    (124)
	exposure_item:  name.L_AS simple_name 
	hiding_clause:  name.L_EXCEPT hidings 
	visibility_item:  name.    (390)

	L_AS  shift 327
	L_EXCEPT  shift 328
	;  reduce 390 (src line 1156)
	.  reduce 124 (src line 411)


state 211
	exposure_clause:  exposures.L_FROM name 
	exposures:  exposures., exposure_item 

	L_FROM  shift 329
	,  shift 330
	.  error


state 212
	exposures:  exposure_item.    (127)

	.  reduce 127 (src line 417)


state 213
	libraries:  L_LIBRARIES library_names ;.    (183)

	.  reduce 183 (src line 579)


state 214
	library_names:  library_names ,.simple_name 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 331

state 215
	model:  model_head model_library model_inclusions model_body.model_tail ; 
	empty: .    (394)

	L_END  shift 333
	.  reduce 394 (src line 1169)

	empty  goto 334
	model_tail  goto 332

state 216
	model_body:  model_items.    (205)
	model_items:  model_items.model_item ; 

	L_ASSOCIATE  shift 188
	L_ATTRIBUTE  shift 198
	L_CASE  shift 23
	L_CHAR  shift 49
	L_CLASS  shift 185
	L_COERCION  shift 128
	L_CONFIGURATION  shift 189
	L_CONNECT  shift 191
	L_CONSTRAINT  shift 192
	L_DEFAULT  shift 132
	L_DERIVATIVE  shift 25
	L_DIMENSION  shift 168
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_FOR  shift 205
	L_IDENTIFIER  shift 135
	L_IF  shift 204
	L_INSTANCE  shift 186
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_MULTIPLIER  shift 170
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_SIGNAL  shift 199
	L_STRING  shift 50
	L_STRUCTURE  shift 196
	L_TABLE  shift 203
	L_TYPE  shift 197
	L_UNIT  shift 184
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  reduce 205 (src line 639)

	expr  goto 193
	abs_prop_def  goto 171
	property_kind  goto 187
	simple_name  goto 45
	associate_def  goto 172
	name  goto 136
	case_expr  goto 10
	class_def  goto 159
	class_header  goto 167
	cond_expr  goto 11
	config_def  goto 173
	connections  goto 174
	label  goto 190
	constraint_def  goto 175
	value_def  goto 180
	deferred_type_def  goto 182
	derivative  goto 12
	dim_def  goto 160
	op  goto 29
	equation_def  goto 176
	prefix_expr  goto 7
	for_generate_header  goto 201
	function_apply  goto 13
	simple_pattern_expr  goto 20
	name_def  goto 178
	generate_def  goto 177
	generate_header  goto 194
	if_generate_header  goto 200
	table_generate_header  goto 202
	struct_item  goto 163
	struct_def  goto 164
	instance_header  goto 169
	instance_def  goto 161
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	model_item  goto 284
	multiplier_spec  goto 162
	type_def  goto 165
	unit_def  goto 166
	selected_name  goto 46
	named_values  goto 129
	names  goto 133
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	specified_type_def  goto 183
	struct_def_head  goto 181
	table_def  goto 179
	table_head  goto 195
	value_def_target  goto 130

state 217
	model_body:  empty.    (206)

	.  reduce 206 (src line 641)


state 218
	designation:  \' designation_indicators \'.    (100)

	.  reduce 100 (src line 347)


state 219
	designation_indicators:  indicators /.indicators 

	L_IDENTIFIER  shift 53
	(  shift 336
	.  error

	simple_name  goto 45
	name  goto 111
	indicators  goto 335
	indicator_list  goto 109
	indicator  goto 110
	selected_name  goto 46
	selected_names  goto 54

state 220
	designation_indicators:  ( designation_indicators.) 

	)  shift 337
	.  error


221: shift/reduce conflict (shift 338(0), red'n 107(0)) on )
state 221
	indicators:  indicator_list.    (107)
	indicators:  ( indicator_list.) 
	indicator_list:  indicator_list.* indicator 

	)  shift 338
	*  shift 223
	.  reduce 107 (src line 367)


222: shift/reduce conflict (shift 339(0), red'n 109(0)) on )
state 222
	indicator_list:  indicator.    (109)
	indicator:  ( indicator.) 

	)  shift 339
	.  reduce 109 (src line 372)


state 223
	indicator_list:  indicator_list *.indicator 

	L_IDENTIFIER  shift 53
	(  shift 341
	.  error

	simple_name  goto 45
	name  goto 111
	indicator  goto 340
	selected_name  goto 46
	selected_names  goto 54

state 224
	indicator:  name ^.indicator_exp 

	L_DOUBLE  shift 52
	L_INTEGER  shift 344
	L_OPERATOR  shift 51
	^  shift 43
	(  shift 345
	/  shift 41
	*  shift 42
	-  shift 44
	.  error

	indicator_exp  goto 342
	op  goto 343
	operator  goto 40

state 225
	function_apply:  simple_pattern_expr ( function_args ).    (135)

	.  reduce 135 (src line 443)


state 226
	case_expr:  L_CASE expr L_OF {.alternatives } 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 122
	simple_name  goto 45
	alternative  goto 347
	pattern  goto 348
	alternatives  goto 346
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 227
	cond_expr:  L_IF expr L_THEN expr.L_ELSE expr 

	L_ELSE  shift 349
	.  error


state 228
	derivative:  L_DERIVATIVE ( L_IDENTIFIER ).( expr ) 

	(  shift 350
	.  error


229: shift/reduce conflict (shift 352(0), red'n 394(0)) on (
state 229
	integral:  L_INTEGRAL ( L_IDENTIFIER ).integral_expr ( expr ) 
	empty: .    (394)

	(  shift 352
	.  error

	empty  goto 353
	integral_expr  goto 351

state 230
	lambda_abstract:  \\ ( patterns ).L_RARROW expr 

	L_RARROW  shift 354
	.  error


state 231
	patterns:  patterns ,.pattern 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 122
	simple_name  goto 45
	pattern  goto 355
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 232
	let_expr:  L_LET nested_defs L_IN expr.    (182)

	.  reduce 182 (src line 576)


state 233
	nested_defs:  { nested_def_list }.    (229)

	.  reduce 229 (src line 708)


state 234
	nested_def_list:  nested_def_list nested_def.; 

	;  shift 356
	.  error


state 235
	nested_def_list:  nested_def ;.    (230)

	.  reduce 230 (src line 711)


state 236
	name_def:  L_COERCION named_values.L_COLONS type_spec where_context 

	L_COLONS  shift 357
	.  error


state 237
	names:  name.    (226)

	.  reduce 226 (src line 698)


state 238
	name_def:  named_values L_COLONS.type_spec where_context 

	L_COMPONENT  shift 260
	L_CONNECTOR  shift 261
	L_CONSTRAINT  shift 262
	L_DEFINITION  shift 263
	L_DIMENSION  shift 264
	L_EQUATION  shift 265
	L_FUNCTION  shift 266
	L_IDENTIFIER  shift 53
	L_MODEL  shift 267
	L_PROPERTY  shift 268
	L_STRUCTURE  shift 269
	L_TYPE  shift 270
	L_UNIT  shift 271
	(  shift 258
	[  shift 259
	.  error

	type_spec  goto 358
	simple_name  goto 45
	name  goto 255
	def_designator  goto 257
	selected_name  goto 46
	selected_names  goto 54
	type_component  goto 254
	type_term  goto 256

state 239
	value_def:  value_def_target rhs.    (378)

	.  reduce 378 (src line 1126)


state 240
	rhs:  rhs_guard.where_clause 
	rhs:  rhs_guard.    (278)

	L_WHERE  shift 360
	.  reduce 278 (src line 840)

	where_clause  goto 359

state 241
	rhs_guard:  =.expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 361
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 242
	guards:  guards.guard 
	rhs_guard:  guards.    (280)

	|  shift 244
	.  reduce 280 (src line 845)

	guard  goto 362

state 243
	guards:  guard.    (157)

	.  reduce 157 (src line 499)


state 244
	guard:  |.expr = expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 363
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 245
	value_def:  label L_DEFAULT.value_def_target rhs 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 134
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	value_def_target  goto 364

state 246
	value_def:  L_DEFAULT value_def_target.rhs 

	|  shift 244
	=  shift 241
	.  error

	guards  goto 242
	guard  goto 243
	rhs  goto 365
	rhs_guard  goto 240

state 247
	names:  names ,.name 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 366
	selected_name  goto 46
	selected_names  goto 54

state 248
	label:  L_IDENTIFIER :.    (180)

	.  reduce 180 (src line 570)


state 249
	simple_pattern_expr:  ( expr ).    (292)

	.  reduce 292 (src line 882)


state 250
	simple_pattern_expr:  ( exprs ).    (293)

	.  reduce 293 (src line 884)


state 251
	exprs:  exprs , expr.    (128)

	.  reduce 128 (src line 419)


state 252
	exprs:  expr , expr.    (129)

	.  reduce 129 (src line 421)


state 253
	type_spec:  type_spec.L_RARROW type_component 
	type_spec:  type_spec.L_EQEQGT type_spec 
	typed_expr:  ( expr L_COLONS type_spec.where_context ) 
	empty: .    (394)

	L_EQEQGT  shift 368
	L_RARROW  shift 367
	L_WHERE  shift 370
	.  reduce 394 (src line 1169)

	empty  goto 371
	where_context  goto 369

state 254
	type_spec:  type_component.    (366)

	.  reduce 366 (src line 1089)


state 255
	type_component:  name.( types ) 
	type_term:  name.    (368)

	(  shift 372
	.  reduce 368 (src line 1095)


state 256
	type_component:  type_term.    (353)

	.  reduce 353 (src line 1053)


state 257
	type_component:  def_designator.    (354)

	.  reduce 354 (src line 1055)


state 258
	simple_name:  (.op ) 
	type_term:  (.) 
	type_term:  (.types ) 

	L_COMPONENT  shift 260
	L_CONNECTOR  shift 261
	L_CONSTRAINT  shift 262
	L_DEFINITION  shift 263
	L_DIMENSION  shift 264
	L_DOUBLE  shift 52
	L_EQUATION  shift 265
	L_FUNCTION  shift 266
	L_IDENTIFIER  shift 53
	L_MODEL  shift 267
	L_OPERATOR  shift 51
	L_PROPERTY  shift 268
	L_STRUCTURE  shift 269
	L_TYPE  shift 270
	L_UNIT  shift 271
	^  shift 43
	(  shift 258
	)  shift 373
	/  shift 41
	*  shift 42
	-  shift 44
	[  shift 259
	.  error

	type_spec  goto 294
	simple_name  goto 293
	name  goto 255
	def_designator  goto 257
	op  goto 112
	selected_name  goto 46
	operator  goto 40
	selected_names  goto 54
	types  goto 374
	type_item  goto 375
	type_component  goto 254
	type_term  goto 256

state 259
	type_term:  [.type_spec ] 

	L_COMPONENT  shift 260
	L_CONNECTOR  shift 261
	L_CONSTRAINT  shift 262
	L_DEFINITION  shift 263
	L_DIMENSION  shift 264
	L_EQUATION  shift 265
	L_FUNCTION  shift 266
	L_IDENTIFIER  shift 53
	L_MODEL  shift 267
	L_PROPERTY  shift 268
	L_STRUCTURE  shift 269
	L_TYPE  shift 270
	L_UNIT  shift 271
	(  shift 258
	[  shift 259
	.  error

	type_spec  goto 376
	simple_name  goto 45
	name  goto 255
	def_designator  goto 257
	selected_name  goto 46
	selected_names  goto 54
	type_component  goto 254
	type_term  goto 256

state 260
	def_designator:  L_COMPONENT.    (87)

	.  reduce 87 (src line 319)


state 261
	def_designator:  L_CONNECTOR.    (88)

	.  reduce 88 (src line 321)


state 262
	def_designator:  L_CONSTRAINT.    (89)

	.  reduce 89 (src line 323)


state 263
	def_designator:  L_DEFINITION.    (90)

	.  reduce 90 (src line 325)


state 264
	def_designator:  L_DIMENSION.    (91)

	.  reduce 91 (src line 327)


state 265
	def_designator:  L_EQUATION.    (92)

	.  reduce 92 (src line 329)


state 266
	def_designator:  L_FUNCTION.    (93)

	.  reduce 93 (src line 331)


state 267
	def_designator:  L_MODEL.    (94)

	.  reduce 94 (src line 333)


state 268
	def_designator:  L_PROPERTY.type_spec 

	L_COMPONENT  shift 260
	L_CONNECTOR  shift 261
	L_CONSTRAINT  shift 262
	L_DEFINITION  shift 263
	L_DIMENSION  shift 264
	L_EQUATION  shift 265
	L_FUNCTION  shift 266
	L_IDENTIFIER  shift 53
	L_MODEL  shift 267
	L_PROPERTY  shift 268
	L_STRUCTURE  shift 269
	L_TYPE  shift 270
	L_UNIT  shift 271
	(  shift 258
	[  shift 259
	.  error

	type_spec  goto 377
	simple_name  goto 45
	name  goto 255
	def_designator  goto 257
	selected_name  goto 46
	selected_names  goto 54
	type_component  goto 254
	type_term  goto 256

state 269
	def_designator:  L_STRUCTURE.    (96)

	.  reduce 96 (src line 337)


state 270
	def_designator:  L_TYPE.    (97)

	.  reduce 97 (src line 339)


state 271
	def_designator:  L_UNIT.    (98)

	.  reduce 98 (src line 341)


state 272
	simple_pattern_expr:  ( pattern patterns ).    (294)

	.  reduce 294 (src line 886)


state 273
	exprs:  expr , expr.    (129)
	list:  expr , expr.L_DOTS 

	L_DOTS  shift 378
	.  reduce 129 (src line 421)


state 274
	list:  expr | qualifiers.    (189)
	qualifiers:  qualifiers., qualifier 

	,  shift 379
	.  reduce 189 (src line 592)


state 275
	qualifiers:  qualifier.    (276)

	.  reduce 276 (src line 835)


state 276
	qualifier:  pattern.L_LARROW expr 

	L_LARROW  shift 380
	.  error


state 277
	pattern:  expr.    (251)
	qualifier:  expr.    (274)

	L_LARROW  reduce 251 (src line 778)
	.  reduce 274 (src line 830)


state 278
	list:  expr L_DOTS expr.    (190)

	.  reduce 190 (src line 594)


state 279
	struct_func_create:  property_names L_LTEQEQ name property_names.    (318)

	.  reduce 318 (src line 958)


state 280
	property_names:  (.exprs ) 
	property_names:  (.expr ) 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 382
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	exprs  goto 381
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 281
	package:  package_head package_library package_inclusion package_models package_tail.; 

	;  shift 383
	.  error


state 282
	package_tail:  L_END.simple_name 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 384

state 283
	package_tail:  empty.    (244)

	.  reduce 244 (src line 764)


state 284
	model_items:  model_items model_item.; 

	;  shift 385
	.  error


state 285
	model_items:  model_item ;.    (208)

	.  reduce 208 (src line 646)


state 286
	class_def:  class_header class_types.class_body where_context 
	empty: .    (394)

	{  shift 387
	.  reduce 394 (src line 1169)

	class_body  goto 386
	empty  goto 388

state 287
	class_types:  type_spec.    (28)
	type_spec:  type_spec.L_RARROW type_component 
	type_spec:  type_spec.L_EQEQGT type_spec 

	L_EQEQGT  shift 368
	L_RARROW  shift 367
	.  reduce 28 (src line 138)


state 288
	dim_def:  L_DIMENSION L_IDENTIFIER.dim_body unit_variations 
	empty: .    (394)

	=  shift 390
	.  reduce 394 (src line 1169)

	empty  goto 391
	dim_body  goto 389

state 289
	instance_def:  instance_header instance_spec.instance_body where_context 
	empty: .    (394)

	{  shift 393
	.  reduce 394 (src line 1169)

	empty  goto 394
	instance_body  goto 392

290: shift/reduce conflict (shift 395(0), red'n 172(0)) on ,
state 290
	instance_spec:  type_specs.    (172)
	type_specs:  type_specs., type_specs 

	,  shift 395
	.  reduce 172 (src line 547)


state 291
	instance_spec:  empty.    (173)

	.  reduce 173 (src line 549)


state 292
	type_specs:  type_item.    (363)

	.  reduce 363 (src line 1082)


state 293
	name:  simple_name.    (220)
	type_item:  simple_name.L_COLONS type_spec 

	L_COLONS  shift 396
	.  reduce 220 (src line 678)


state 294
	type_item:  type_spec.    (361)
	type_spec:  type_spec.L_RARROW type_component 
	type_spec:  type_spec.L_EQEQGT type_spec 

	L_EQEQGT  shift 368
	L_RARROW  shift 367
	.  reduce 361 (src line 1077)


state 295
	multiplier_spec:  L_MULTIPLIER L_IDENTIFIER.= multiplier_tail unit_variations 

	=  shift 397
	.  error


state 296
	struct_def:  struct_def_head struct_inclusion.struct_conns struct_comps struct_defs L_END struct_def_tail 
	empty: .    (394)

	L_CONNECTORS  shift 401
	.  reduce 394 (src line 1169)

	empty  goto 400
	conn_clause  goto 399
	struct_conns  goto 398

state 297
	inclusions:  inclusions.L_INCLUDES visibility_item ; 
	struct_inclusion:  inclusions.    (310)

	L_INCLUDES  shift 206
	.  reduce 310 (src line 941)


state 298
	struct_inclusion:  empty.    (311)

	.  reduce 311 (src line 942)


state 299
	unit_def:  L_UNIT L_IDENTIFIER.L_OF name eq_designation unit_convert unit_variations 

	L_OF  shift 402
	.  error


state 300
	class_header:  L_CLASS simple_name.    (27)

	.  reduce 27 (src line 135)


state 301
	instance_header:  L_INSTANCE simple_name.    (170)

	.  reduce 170 (src line 542)


state 302
	instance_header:  L_INSTANCE op.    (171)

	.  reduce 171 (src line 544)


state 303
	abs_prop_def:  property_kind abs_prop_names.: type_spec 
	abs_prop_names:  abs_prop_names., simple_name 

	:  shift 403
	,  shift 404
	.  error


state 304
	abs_prop_names:  simple_name.    (8)

	.  reduce 8 (src line 72)


state 305
	associate_def:  L_ASSOCIATE associate_defs.    (16)
	associate_defs:  associate_defs., name 

	,  shift 405
	.  reduce 16 (src line 95)


state 306
	associate_defs:  name.    (18)

	.  reduce 18 (src line 103)


state 307
	config_def:  L_CONFIGURATION simple_name.config_body L_END config_def_tail 

	L_FOR  shift 409
	.  error

	comp_config  goto 410
	comp_configs  goto 408
	config_body  goto 406
	struct_config  goto 407

state 308
	connections:  label L_CONNECT.conn_specs 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 312
	conn_specs  goto 411
	conn_spec  goto 311
	selected_name  goto 46
	selected_names  goto 54

state 309
	equation_def:  label expr.    (121)

	.  reduce 121 (src line 403)


state 310
	connections:  L_CONNECT conn_specs.    (64)
	conn_specs:  conn_specs., conn_specs 

	,  shift 412
	.  reduce 64 (src line 249)


state 311
	conn_specs:  conn_spec.    (71)

	.  reduce 71 (src line 272)


state 312
	conn_spec:  name.    (72)

	.  reduce 72 (src line 275)


state 313
	constraint_def:  L_CONSTRAINT simple_name.: expr constraint_report 

	:  shift 413
	.  error


state 314
	generate_def:  generate_header L_GENERATE.generate_body L_END L_GENERATE 

	L_ASSOCIATE  shift 188
	L_ATTRIBUTE  shift 198
	L_CASE  shift 23
	L_CHAR  shift 49
	L_COERCION  shift 128
	L_CONFIGURATION  shift 189
	L_CONNECT  shift 191
	L_CONSTRAINT  shift 192
	L_DEFAULT  shift 132
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_FOR  shift 205
	L_IDENTIFIER  shift 135
	L_IF  shift 204
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_SIGNAL  shift 199
	L_STRING  shift 50
	L_STRUCTURE  shift 196
	L_TABLE  shift 203
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 193
	abs_prop_def  goto 171
	property_kind  goto 187
	simple_name  goto 45
	associate_def  goto 172
	name  goto 136
	case_expr  goto 10
	cond_expr  goto 11
	config_def  goto 173
	connections  goto 174
	label  goto 190
	constraint_def  goto 175
	value_def  goto 180
	derivative  goto 12
	op  goto 29
	equation_def  goto 176
	prefix_expr  goto 7
	for_generate_header  goto 201
	function_apply  goto 13
	simple_pattern_expr  goto 20
	name_def  goto 178
	generate_body  goto 414
	generate_item  goto 415
	generate_def  goto 177
	generate_header  goto 194
	if_generate_header  goto 200
	table_generate_header  goto 202
	struct_item  goto 416
	struct_def  goto 417
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	named_values  goto 129
	names  goto 133
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	struct_def_head  goto 181
	table_def  goto 179
	table_head  goto 195
	value_def_target  goto 130

state 315
	table_def:  table_head table_header.table_column column_names table_data table_tail 
	empty: .    (394)

	L_COLUMNS  shift 421
	.  reduce 394 (src line 1169)

	empty  goto 420
	column_header  goto 419
	table_column  goto 418

state 316
	table_header:  L_TITLE.expr ; 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 422
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 317
	table_header:  empty.    (336)

	.  reduce 336 (src line 1004)


state 318
	struct_def_head:  L_STRUCTURE simple_name.    (307)

	.  reduce 307 (src line 933)


state 319
	deferred_type_def:  L_TYPE simple_name.where_context 
	name:  simple_name.    (220)
	empty: .    (394)

	L_WHERE  shift 370
	;  reduce 394 (src line 1169)
	.  reduce 220 (src line 678)

	empty  goto 371
	where_context  goto 423

state 320
	specified_type_def:  L_TYPE type_header.= type_specifier where_context 

	=  shift 424
	.  error


state 321
	type_header:  type_spec.    (359)
	type_spec:  type_spec.L_RARROW type_component 
	type_spec:  type_spec.L_EQEQGT type_spec 

	L_EQEQGT  shift 368
	L_RARROW  shift 367
	.  reduce 359 (src line 1070)


state 322
	table_head:  L_TABLE simple_name.    (332)

	.  reduce 332 (src line 994)


state 323
	cond_expr:  L_IF expr.L_THEN expr L_ELSE expr 
	if_generate_header:  L_IF expr.    (167)

	L_THEN  shift 117
	.  reduce 167 (src line 536)


state 324
	for_generate_header:  L_FOR L_EACH.generate_obj_kind simple_name for_tail 
	table_generate_header:  L_FOR L_EACH.L_ROW L_IN L_TABLE name 
	table_generate_header:  L_FOR L_EACH.L_ROW simple_name L_IN L_TABLE name 

	L_COMPONENT  shift 427
	L_CONNECTOR  shift 429
	L_CONNECTION  shift 428
	L_MEMBER  shift 430
	L_ROW  shift 426
	L_STRUCTURE  shift 431
	.  error

	generate_obj_kind  goto 425

state 325
	inclusions:  inclusions L_INCLUDES visibility_item.; 

	;  shift 432
	.  error


state 326
	inclusions:  L_INCLUDES visibility_item ;.    (169)

	.  reduce 169 (src line 540)


state 327
	exposure_item:  name L_AS.simple_name 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 433

state 328
	hiding_clause:  name L_EXCEPT.hidings 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 435
	hidings  goto 434

state 329
	exposure_clause:  exposures L_FROM.name 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 436
	selected_name  goto 46
	selected_names  goto 54

state 330
	exposures:  exposures ,.exposure_item 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 438
	exposure_item  goto 437
	selected_name  goto 46
	selected_names  goto 54

state 331
	library_names:  library_names , simple_name.    (184)

	.  reduce 184 (src line 581)


state 332
	model:  model_head model_library model_inclusions model_body model_tail.; 

	;  shift 439
	.  error


state 333
	model_tail:  L_END.simple_name 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 440

state 334
	model_tail:  empty.    (200)

	.  reduce 200 (src line 630)


state 335
	designation_indicators:  indicators / indicators.    (102)

	.  reduce 102 (src line 352)


state 336
	indicators:  (.indicator_list ) 
	indicator:  (.indicator ) 
	simple_name:  (.op ) 

	L_DOUBLE  shift 52
	L_IDENTIFIER  shift 53
	L_OPERATOR  shift 51
	^  shift 43
	(  shift 341
	/  shift 41
	*  shift 42
	-  shift 44
	.  error

	simple_name  goto 45
	name  goto 111
	indicator_list  goto 441
	indicator  goto 222
	op  goto 112
	selected_name  goto 46
	operator  goto 40
	selected_names  goto 54

state 337
	designation_indicators:  ( designation_indicators ).    (103)

	.  reduce 103 (src line 354)


state 338
	indicators:  ( indicator_list ).    (108)

	.  reduce 108 (src line 369)


state 339
	indicator:  ( indicator ).    (113)

	.  reduce 113 (src line 383)


state 340
	indicator_list:  indicator_list * indicator.    (110)

	.  reduce 110 (src line 374)


state 341
	indicator:  (.indicator ) 
	simple_name:  (.op ) 

	L_DOUBLE  shift 52
	L_IDENTIFIER  shift 53
	L_OPERATOR  shift 51
	^  shift 43
	(  shift 341
	/  shift 41
	*  shift 42
	-  shift 44
	.  error

	simple_name  goto 45
	name  goto 111
	indicator  goto 442
	op  goto 112
	selected_name  goto 46
	operator  goto 40
	selected_names  goto 54

state 342
	indicator:  name ^ indicator_exp.    (111)

	.  reduce 111 (src line 377)


state 343
	indicator_exp:  op.L_INTEGER indicator_post 

	L_INTEGER  shift 443
	.  error


state 344
	indicator_exp:  L_INTEGER.indicator_post 
	empty: .    (394)

	L_OPERATOR  shift 445
	.  reduce 394 (src line 1169)

	empty  goto 446
	indicator_post  goto 444

state 345
	indicator_exp:  (.indicator_exp ) 

	L_DOUBLE  shift 52
	L_INTEGER  shift 344
	L_OPERATOR  shift 51
	^  shift 43
	(  shift 345
	/  shift 41
	*  shift 42
	-  shift 44
	.  error

	indicator_exp  goto 447
	op  goto 343
	operator  goto 40

state 346
	alternatives:  alternatives.alternative ; 
	case_expr:  L_CASE expr L_OF { alternatives.} 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	}  shift 449
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 122
	simple_name  goto 45
	alternative  goto 448
	pattern  goto 348
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 347
	alternatives:  alternative.; 

	;  shift 450
	.  error


state 348
	alternative:  pattern.alt_rhs 

	L_RARROW  shift 453
	|  shift 456
	.  error

	alt_rhs  goto 451
	alt_rhs_guard  goto 452
	guard_alts  goto 454
	guard_alt  goto 455

state 349
	cond_expr:  L_IF expr L_THEN expr L_ELSE.expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 457
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 350
	derivative:  L_DERIVATIVE ( L_IDENTIFIER ) (.expr ) 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 458
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 351
	integral:  L_INTEGRAL ( L_IDENTIFIER ) integral_expr.( expr ) 

	(  shift 459
	.  error


state 352
	integral_expr:  (.expr , expr ) 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 460
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 353
	integral_expr:  empty.    (179)

	.  reduce 179 (src line 567)


state 354
	lambda_abstract:  \\ ( patterns ) L_RARROW.expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 461
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 355
	patterns:  patterns , pattern.    (252)

	.  reduce 252 (src line 781)


state 356
	nested_def_list:  nested_def_list nested_def ;.    (231)

	.  reduce 231 (src line 713)


state 357
	name_def:  L_COERCION named_values L_COLONS.type_spec where_context 

	L_COMPONENT  shift 260
	L_CONNECTOR  shift 261
	L_CONSTRAINT  shift 262
	L_DEFINITION  shift 263
	L_DIMENSION  shift 264
	L_EQUATION  shift 265
	L_FUNCTION  shift 266
	L_IDENTIFIER  shift 53
	L_MODEL  shift 267
	L_PROPERTY  shift 268
	L_STRUCTURE  shift 269
	L_TYPE  shift 270
	L_UNIT  shift 271
	(  shift 258
	[  shift 259
	.  error

	type_spec  goto 462
	simple_name  goto 45
	name  goto 255
	def_designator  goto 257
	selected_name  goto 46
	selected_names  goto 54
	type_component  goto 254
	type_term  goto 256

state 358
	name_def:  named_values L_COLONS type_spec.where_context 
	type_spec:  type_spec.L_RARROW type_component 
	type_spec:  type_spec.L_EQEQGT type_spec 
	empty: .    (394)

	L_EQEQGT  shift 368
	L_RARROW  shift 367
	L_WHERE  shift 370
	.  reduce 394 (src line 1169)

	empty  goto 371
	where_context  goto 463

state 359
	rhs:  rhs_guard where_clause.    (277)

	.  reduce 277 (src line 838)


state 360
	where_clause:  L_WHERE.{ function_defs } 

	{  shift 464
	.  error


state 361
	rhs_guard:  = expr.    (279)

	.  reduce 279 (src line 843)


state 362
	guards:  guards guard.    (156)

	.  reduce 156 (src line 497)


state 363
	guard:  | expr.= expr 

	=  shift 465
	.  error


state 364
	value_def:  label L_DEFAULT value_def_target.rhs 

	|  shift 244
	=  shift 241
	.  error

	guards  goto 242
	guard  goto 243
	rhs  goto 466
	rhs_guard  goto 240

state 365
	value_def:  L_DEFAULT value_def_target rhs.    (380)

	.  reduce 380 (src line 1130)


state 366
	names:  names , name.    (225)

	.  reduce 225 (src line 695)


state 367
	type_spec:  type_spec L_RARROW.type_component 

	L_COMPONENT  shift 260
	L_CONNECTOR  shift 261
	L_CONSTRAINT  shift 262
	L_DEFINITION  shift 263
	L_DIMENSION  shift 264
	L_EQUATION  shift 265
	L_FUNCTION  shift 266
	L_IDENTIFIER  shift 53
	L_MODEL  shift 267
	L_PROPERTY  shift 268
	L_STRUCTURE  shift 269
	L_TYPE  shift 270
	L_UNIT  shift 271
	(  shift 258
	[  shift 259
	.  error

	simple_name  goto 45
	name  goto 255
	def_designator  goto 257
	selected_name  goto 46
	selected_names  goto 54
	type_component  goto 467
	type_term  goto 256

state 368
	type_spec:  type_spec L_EQEQGT.type_spec 

	L_COMPONENT  shift 260
	L_CONNECTOR  shift 261
	L_CONSTRAINT  shift 262
	L_DEFINITION  shift 263
	L_DIMENSION  shift 264
	L_EQUATION  shift 265
	L_FUNCTION  shift 266
	L_IDENTIFIER  shift 53
	L_MODEL  shift 267
	L_PROPERTY  shift 268
	L_STRUCTURE  shift 269
	L_TYPE  shift 270
	L_UNIT  shift 271
	(  shift 258
	[  shift 259
	.  error

	type_spec  goto 468
	simple_name  goto 45
	name  goto 255
	def_designator  goto 257
	selected_name  goto 46
	selected_names  goto 54
	type_component  goto 254
	type_term  goto 256

state 369
	typed_expr:  ( expr L_COLONS type_spec where_context.) 

	)  shift 469
	.  error


state 370
	where_context:  L_WHERE.context 
	empty: .    (394)

	L_COMPONENT  shift 260
	L_CONNECTOR  shift 261
	L_CONSTRAINT  shift 262
	L_DEFINITION  shift 263
	L_DIMENSION  shift 264
	L_EQUATION  shift 265
	L_FUNCTION  shift 266
	L_IDENTIFIER  shift 53
	L_MODEL  shift 267
	L_PROPERTY  shift 268
	L_STRUCTURE  shift 269
	L_TYPE  shift 270
	L_UNIT  shift 271
	{  shift 472
	(  shift 258
	[  shift 259
	.  reduce 394 (src line 1169)

	type_spec  goto 294
	simple_name  goto 293
	name  goto 255
	empty  goto 291
	class_constraint  goto 471
	instance_spec  goto 473
	context  goto 470
	def_designator  goto 257
	type_specs  goto 290
	selected_name  goto 46
	selected_names  goto 54
	type_item  goto 292
	type_component  goto 254
	type_term  goto 256

state 371
	where_context:  empty.    (393)

	.  reduce 393 (src line 1166)


state 372
	type_component:  name (.types ) 

	L_COMPONENT  shift 260
	L_CONNECTOR  shift 261
	L_CONSTRAINT  shift 262
	L_DEFINITION  shift 263
	L_DIMENSION  shift 264
	L_EQUATION  shift 265
	L_FUNCTION  shift 266
	L_IDENTIFIER  shift 53
	L_MODEL  shift 267
	L_PROPERTY  shift 268
	L_STRUCTURE  shift 269
	L_TYPE  shift 270
	L_UNIT  shift 271
	(  shift 258
	[  shift 259
	.  error

	type_spec  goto 294
	simple_name  goto 293
	name  goto 255
	def_designator  goto 257
	selected_name  goto 46
	selected_names  goto 54
	types  goto 474
	type_item  goto 375
	type_component  goto 254
	type_term  goto 256

state 373
	type_term:  ( ).    (369)

	.  reduce 369 (src line 1099)


state 374
	types:  types., type_item 
	type_term:  ( types.) 

	,  shift 475
	)  shift 476
	.  error


state 375
	types:  type_item.    (351)

	.  reduce 351 (src line 1046)


state 376
	type_spec:  type_spec.L_RARROW type_component 
	type_spec:  type_spec.L_EQEQGT type_spec 
	type_term:  [ type_spec.] 

	L_EQEQGT  shift 368
	L_RARROW  shift 367
	]  shift 477
	.  error


377: shift/reduce conflict (shift 368(0), red'n 95(0)) on L_EQEQGT
377: shift/reduce conflict (shift 367(1), red'n 95(0)) on L_RARROW
state 377
	def_designator:  L_PROPERTY type_spec.    (95)
	type_spec:  type_spec.L_RARROW type_component 
	type_spec:  type_spec.L_EQEQGT type_spec 

	L_EQEQGT  shift 368
	L_RARROW  shift 367
	.  reduce 95 (src line 335)


state 378
	list:  expr , expr L_DOTS.    (191)

	.  reduce 191 (src line 596)


state 379
	qualifiers:  qualifiers ,.qualifier 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 277
	simple_name  goto 45
	pattern  goto 276
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	qualifier  goto 478
	selected_names  goto 54
	variable  goto 32

state 380
	qualifier:  pattern L_LARROW.expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 479
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 381
	exprs:  exprs., expr 
	property_names:  ( exprs.) 

	,  shift 140
	)  shift 480
	.  error


state 382
	exprs:  expr., expr 
	property_names:  ( expr.) 

	,  shift 142
	)  shift 481
	.  error


state 383
	package:  package_head package_library package_inclusion package_models package_tail ;.    (241)

	.  reduce 241 (src line 752)


state 384
	package_tail:  L_END simple_name.    (243)

	.  reduce 243 (src line 762)


state 385
	model_items:  model_items model_item ;.    (207)

	.  reduce 207 (src line 644)


state 386
	class_def:  class_header class_types class_body.where_context 
	empty: .    (394)

	L_WHERE  shift 370
	.  reduce 394 (src line 1169)

	empty  goto 371
	where_context  goto 482

state 387
	class_body:  {.class_defs } 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_COERCION  shift 128
	L_DEFAULT  shift 132
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 135
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 134
	simple_name  goto 45
	name  goto 136
	case_expr  goto 10
	class_defs  goto 483
	function_defs  goto 484
	cond_expr  goto 11
	label  goto 131
	value_def  goto 487
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	function_def  goto 485
	name_def  goto 486
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	named_values  goto 129
	names  goto 133
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	value_def_target  goto 130

state 388
	class_body:  empty.    (21)

	.  reduce 21 (src line 114)


state 389
	dim_def:  L_DIMENSION L_IDENTIFIER dim_body.unit_variations 
	empty: .    (394)

	L_VARIATIONS  shift 491
	.  reduce 394 (src line 1169)

	empty  goto 490
	unit_variations  goto 488
	variations  goto 489

state 390
	dim_body:  =.designation 

	\'  shift 66
	.  error

	designation  goto 492

state 391
	dim_body:  empty.    (106)

	.  reduce 106 (src line 364)


state 392
	instance_def:  instance_header instance_spec instance_body.where_context 
	empty: .    (394)

	L_WHERE  shift 370
	.  reduce 394 (src line 1169)

	empty  goto 371
	where_context  goto 493

state 393
	instance_body:  {.value_defs } 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DEFAULT  shift 132
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 135
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 134
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	label  goto 131
	value_def  goto 495
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	value_defs  goto 494
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	value_def_target  goto 130

state 394
	instance_body:  empty.    (175)

	.  reduce 175 (src line 554)


state 395
	type_specs:  type_specs ,.type_specs 

	L_COMPONENT  shift 260
	L_CONNECTOR  shift 261
	L_CONSTRAINT  shift 262
	L_DEFINITION  shift 263
	L_DIMENSION  shift 264
	L_EQUATION  shift 265
	L_FUNCTION  shift 266
	L_IDENTIFIER  shift 53
	L_MODEL  shift 267
	L_PROPERTY  shift 268
	L_STRUCTURE  shift 269
	L_TYPE  shift 270
	L_UNIT  shift 271
	(  shift 258
	[  shift 259
	.  error

	type_spec  goto 294
	simple_name  goto 293
	name  goto 255
	def_designator  goto 257
	type_specs  goto 496
	selected_name  goto 46
	selected_names  goto 54
	type_item  goto 292
	type_component  goto 254
	type_term  goto 256

state 396
	type_item:  simple_name L_COLONS.type_spec 

	L_COMPONENT  shift 260
	L_CONNECTOR  shift 261
	L_CONSTRAINT  shift 262
	L_DEFINITION  shift 263
	L_DIMENSION  shift 264
	L_EQUATION  shift 265
	L_FUNCTION  shift 266
	L_IDENTIFIER  shift 53
	L_MODEL  shift 267
	L_PROPERTY  shift 268
	L_STRUCTURE  shift 269
	L_TYPE  shift 270
	L_UNIT  shift 271
	(  shift 258
	[  shift 259
	.  error

	type_spec  goto 497
	simple_name  goto 45
	name  goto 255
	def_designator  goto 257
	selected_name  goto 46
	selected_names  goto 54
	type_component  goto 254
	type_term  goto 256

state 397
	multiplier_spec:  L_MULTIPLIER L_IDENTIFIER =.multiplier_tail unit_variations 

	L_FLOAT  shift 500
	L_INTEGER  shift 499
	.  error

	multiplier_tail  goto 498

state 398
	struct_def:  struct_def_head struct_inclusion struct_conns.struct_comps struct_defs L_END struct_def_tail 
	empty: .    (394)

	L_COMPONENTS  shift 504
	.  reduce 394 (src line 1169)

	empty  goto 503
	components  goto 502
	struct_comps  goto 501

state 399
	struct_conns:  conn_clause.    (316)

	.  reduce 316 (src line 953)


state 400
	struct_conns:  empty.    (317)

	.  reduce 317 (src line 955)


state 401
	conn_clause:  L_CONNECTORS.conn_opt_names ; 
	empty: .    (394)

	L_IDENTIFIER  shift 68
	(  shift 69
	.  reduce 394 (src line 1169)

	simple_name  goto 508
	empty  goto 507
	conn_opt_names  goto 505
	conn_names  goto 506

state 402
	unit_def:  L_UNIT L_IDENTIFIER L_OF.name eq_designation unit_convert unit_variations 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 509
	selected_name  goto 46
	selected_names  goto 54

state 403
	abs_prop_def:  property_kind abs_prop_names :.type_spec 

	L_COMPONENT  shift 260
	L_CONNECTOR  shift 261
	L_CONSTRAINT  shift 262
	L_DEFINITION  shift 263
	L_DIMENSION  shift 264
	L_EQUATION  shift 265
	L_FUNCTION  shift 266
	L_IDENTIFIER  shift 53
	L_MODEL  shift 267
	L_PROPERTY  shift 268
	L_STRUCTURE  shift 269
	L_TYPE  shift 270
	L_UNIT  shift 271
	(  shift 258
	[  shift 259
	.  error

	type_spec  goto 510
	simple_name  goto 45
	name  goto 255
	def_designator  goto 257
	selected_name  goto 46
	selected_names  goto 54
	type_component  goto 254
	type_term  goto 256

state 404
	abs_prop_names:  abs_prop_names ,.simple_name 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 511

state 405
	associate_defs:  associate_defs ,.name 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 512
	selected_name  goto 46
	selected_names  goto 54

state 406
	config_def:  L_CONFIGURATION simple_name config_body.L_END config_def_tail 

	L_END  shift 513
	.  error


state 407
	config_body:  struct_config.; 

	;  shift 514
	.  error


state 408
	comp_configs:  comp_configs.comp_config ; 
	config_body:  comp_configs.    (59)

	L_FOR  shift 516
	.  reduce 59 (src line 232)

	comp_config  goto 515

state 409
	comp_config:  L_FOR.simple_name L_USE comp_clause 
	struct_config:  L_FOR.name struct_config_body L_END struct_config_tail 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 517
	name  goto 518
	selected_name  goto 46
	selected_names  goto 54

state 410
	comp_configs:  comp_config.; 

	;  shift 519
	.  error


state 411
	connections:  label L_CONNECT conn_specs.    (63)
	conn_specs:  conn_specs., conn_specs 

	,  shift 412
	.  reduce 63 (src line 247)


state 412
	conn_specs:  conn_specs ,.conn_specs 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 312
	conn_specs  goto 520
	conn_spec  goto 311
	selected_name  goto 46
	selected_names  goto 54

state 413
	constraint_def:  L_CONSTRAINT simple_name :.expr constraint_report 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 521
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 414
	generate_body:  generate_body.generate_item ; 
	generate_def:  generate_header L_GENERATE generate_body.L_END L_GENERATE 

	L_ASSOCIATE  shift 188
	L_ATTRIBUTE  shift 198
	L_CASE  shift 23
	L_CHAR  shift 49
	L_COERCION  shift 128
	L_CONFIGURATION  shift 189
	L_CONNECT  shift 191
	L_CONSTRAINT  shift 192
	L_DEFAULT  shift 132
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_END  shift 523
	L_FLOAT  shift 48
	L_FOR  shift 205
	L_IDENTIFIER  shift 135
	L_IF  shift 204
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_SIGNAL  shift 199
	L_STRING  shift 50
	L_STRUCTURE  shift 196
	L_TABLE  shift 203
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 193
	abs_prop_def  goto 171
	property_kind  goto 187
	simple_name  goto 45
	associate_def  goto 172
	name  goto 136
	case_expr  goto 10
	cond_expr  goto 11
	config_def  goto 173
	connections  goto 174
	label  goto 190
	constraint_def  goto 175
	value_def  goto 180
	derivative  goto 12
	op  goto 29
	equation_def  goto 176
	prefix_expr  goto 7
	for_generate_header  goto 201
	function_apply  goto 13
	simple_pattern_expr  goto 20
	name_def  goto 178
	generate_item  goto 522
	generate_def  goto 177
	generate_header  goto 194
	if_generate_header  goto 200
	table_generate_header  goto 202
	struct_item  goto 416
	struct_def  goto 417
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	named_values  goto 129
	names  goto 133
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	struct_def_head  goto 181
	table_def  goto 179
	table_head  goto 195
	value_def_target  goto 130

state 415
	generate_body:  generate_item.; 

	;  shift 524
	.  error


state 416
	generate_item:  struct_item.    (149)

	.  reduce 149 (src line 481)


state 417
	generate_item:  struct_def.    (150)

	.  reduce 150 (src line 483)


state 418
	table_def:  table_head table_header table_column.column_names table_data table_tail 

	L_NAMES  shift 526
	.  error

	column_names  goto 525

state 419
	table_column:  column_header.    (337)

	.  reduce 337 (src line 1007)


state 420
	table_column:  empty.    (338)

	.  reduce 338 (src line 1009)


state 421
	column_header:  L_COLUMNS.string_exprs ; 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 528
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	string_exprs  goto 527
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 422
	table_header:  L_TITLE expr.; 

	;  shift 529
	.  error


state 423
	deferred_type_def:  L_TYPE simple_name where_context.    (86)

	.  reduce 86 (src line 314)


state 424
	specified_type_def:  L_TYPE type_header =.type_specifier where_context 

	L_COMPONENT  shift 260
	L_CONNECTOR  shift 261
	L_CONSTRAINT  shift 262
	L_DEFINITION  shift 263
	L_DIMENSION  shift 264
	L_EQUATION  shift 265
	L_FUNCTION  shift 266
	L_IDENTIFIER  shift 53
	L_MODEL  shift 267
	L_PROPERTY  shift 268
	L_STRUCTURE  shift 269
	L_TYPE  shift 270
	L_UNIT  shift 271
	(  shift 258
	[  shift 259
	.  error

	type_spec  goto 535
	simple_name  goto 45
	name  goto 255
	constructed_type  goto 531
	constructors  goto 532
	type_constructor  goto 533
	def_designator  goto 257
	selected_name  goto 46
	selected_names  goto 54
	type_specifier  goto 530
	type_component  goto 534
	type_term  goto 256

state 425
	for_generate_header:  L_FOR L_EACH generate_obj_kind.simple_name for_tail 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 536

state 426
	table_generate_header:  L_FOR L_EACH L_ROW.L_IN L_TABLE name 
	table_generate_header:  L_FOR L_EACH L_ROW.simple_name L_IN L_TABLE name 

	L_IDENTIFIER  shift 68
	L_IN  shift 537
	(  shift 69
	.  error

	simple_name  goto 538

state 427
	generate_obj_kind:  L_COMPONENT.    (151)

	.  reduce 151 (src line 486)


state 428
	generate_obj_kind:  L_CONNECTION.L_SET 

	L_SET  shift 539
	.  error


state 429
	generate_obj_kind:  L_CONNECTOR.    (153)

	.  reduce 153 (src line 490)


state 430
	generate_obj_kind:  L_MEMBER.    (154)

	.  reduce 154 (src line 492)


state 431
	generate_obj_kind:  L_STRUCTURE.    (155)

	.  reduce 155 (src line 494)


state 432
	inclusions:  inclusions L_INCLUDES visibility_item ;.    (168)

	.  reduce 168 (src line 539)


state 433
	exposure_item:  name L_AS simple_name.    (125)

	.  reduce 125 (src line 413)


state 434
	hiding_clause:  name L_EXCEPT hidings.    (162)
	hidings:  hidings., hidings 

	,  shift 540
	.  reduce 162 (src line 513)


state 435
	hidings:  simple_name.    (164)

	.  reduce 164 (src line 521)


state 436
	exposure_clause:  exposures L_FROM name.    (123)

	.  reduce 123 (src line 408)


state 437
	exposures:  exposures , exposure_item.    (126)

	.  reduce 126 (src line 416)


state 438
	exposure_item:  name.    (124)
	exposure_item:  name.L_AS simple_name 

	L_AS  shift 327
	.  reduce 124 (src line 411)


state 439
	model:  model_head model_library model_inclusions model_body model_tail ;.    (197)

	.  reduce 197 (src line 618)


state 440
	model_tail:  L_END simple_name.    (199)

	.  reduce 199 (src line 628)


state 441
	indicators:  ( indicator_list.) 
	indicator_list:  indicator_list.* indicator 

	)  shift 338
	*  shift 223
	.  error


state 442
	indicator:  ( indicator.) 

	)  shift 339
	.  error


state 443
	indicator_exp:  op L_INTEGER.indicator_post 
	empty: .    (394)

	L_OPERATOR  shift 445
	.  reduce 394 (src line 1169)

	empty  goto 446
	indicator_post  goto 541

state 444
	indicator_exp:  L_INTEGER indicator_post.    (115)

	.  reduce 115 (src line 388)


state 445
	indicator_post:  L_OPERATOR.L_INTEGER 

	L_INTEGER  shift 542
	.  error


state 446
	indicator_post:  empty.    (118)

	.  reduce 118 (src line 395)


state 447
	indicator_exp:  ( indicator_exp.) 

	)  shift 543
	.  error


state 448
	alternatives:  alternatives alternative.; 

	;  shift 544
	.  error


state 449
	case_expr:  L_CASE expr L_OF { alternatives }.    (19)

	.  reduce 19 (src line 109)


state 450
	alternatives:  alternative ;.    (11)

	.  reduce 11 (src line 82)


state 451
	alternative:  pattern alt_rhs.    (9)

	.  reduce 9 (src line 77)


state 452
	alt_rhs:  alt_rhs_guard.where_clause 
	alt_rhs:  alt_rhs_guard.    (13)

	L_WHERE  shift 360
	.  reduce 13 (src line 87)

	where_clause  goto 545

state 453
	alt_rhs_guard:  L_RARROW.expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 546
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 454
	alt_rhs_guard:  guard_alts.    (15)
	guard_alts:  guard_alts.guard_alt 

	|  shift 456
	.  reduce 15 (src line 92)

	guard_alt  goto 547

state 455
	guard_alts:  guard_alt.    (160)

	.  reduce 160 (src line 507)


state 456
	guard_alt:  |.expr L_RARROW expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 548
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 457
	cond_expr:  L_IF expr L_THEN expr L_ELSE expr.    (57)

	.  reduce 57 (src line 227)


state 458
	derivative:  L_DERIVATIVE ( L_IDENTIFIER ) ( expr.) 

	)  shift 549
	.  error


state 459
	integral:  L_INTEGRAL ( L_IDENTIFIER ) integral_expr (.expr ) 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 550
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 460
	integral_expr:  ( expr., expr ) 

	,  shift 551
	.  error


state 461
	lambda_abstract:  \\ ( patterns ) L_RARROW expr.    (181)

	.  reduce 181 (src line 573)


state 462
	name_def:  L_COERCION named_values L_COLONS type_spec.where_context 
	type_spec:  type_spec.L_RARROW type_component 
	type_spec:  type_spec.L_EQEQGT type_spec 
	empty: .    (394)

	L_EQEQGT  shift 368
	L_RARROW  shift 367
	L_WHERE  shift 370
	.  reduce 394 (src line 1169)

	empty  goto 371
	where_context  goto 552

state 463
	name_def:  named_values L_COLONS type_spec where_context.    (223)

	.  reduce 223 (src line 687)


state 464
	where_clause:  L_WHERE {.function_defs } 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_COERCION  shift 128
	L_DEFAULT  shift 132
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 135
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 134
	simple_name  goto 45
	name  goto 136
	case_expr  goto 10
	function_defs  goto 553
	cond_expr  goto 11
	label  goto 131
	value_def  goto 487
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	function_def  goto 485
	name_def  goto 486
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	named_values  goto 129
	names  goto 133
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	value_def_target  goto 130

state 465
	guard:  | expr =.expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 554
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 466
	value_def:  label L_DEFAULT value_def_target rhs.    (379)

	.  reduce 379 (src line 1128)


state 467
	type_spec:  type_spec L_RARROW type_component.    (364)

	.  reduce 364 (src line 1085)


468: shift/reduce conflict (shift 368(0), red'n 365(0)) on L_EQEQGT
468: shift/reduce conflict (shift 367(1), red'n 365(0)) on L_RARROW
state 468
	type_spec:  type_spec.L_RARROW type_component 
	type_spec:  type_spec.L_EQEQGT type_spec 
	type_spec:  type_spec L_EQEQGT type_spec.    (365)

	L_EQEQGT  shift 368
	L_RARROW  shift 367
	.  reduce 365 (src line 1087)


state 469
	typed_expr:  ( expr L_COLONS type_spec where_context ).    (372)

	.  reduce 372 (src line 1106)


state 470
	where_context:  L_WHERE context.    (392)

	.  reduce 392 (src line 1164)


state 471
	context:  class_constraint.    (82)

	.  reduce 82 (src line 304)


state 472
	context:  {.class_constraints } 
	empty: .    (394)

	L_COMPONENT  shift 260
	L_CONNECTOR  shift 261
	L_CONSTRAINT  shift 262
	L_DEFINITION  shift 263
	L_DIMENSION  shift 264
	L_EQUATION  shift 265
	L_FUNCTION  shift 266
	L_IDENTIFIER  shift 53
	L_MODEL  shift 267
	L_PROPERTY  shift 268
	L_STRUCTURE  shift 269
	L_TYPE  shift 270
	L_UNIT  shift 271
	(  shift 258
	[  shift 259
	.  reduce 394 (src line 1169)

	type_spec  goto 294
	simple_name  goto 293
	name  goto 255
	empty  goto 291
	class_constraint  goto 556
	instance_spec  goto 473
	class_constraints  goto 555
	def_designator  goto 257
	type_specs  goto 290
	selected_name  goto 46
	selected_names  goto 54
	type_item  goto 292
	type_component  goto 254
	type_term  goto 256

state 473
	class_constraint:  instance_spec.    (22)

	.  reduce 22 (src line 117)


state 474
	types:  types., type_item 
	type_component:  name ( types.) 

	,  shift 475
	)  shift 557
	.  error


state 475
	types:  types ,.type_item 

	L_COMPONENT  shift 260
	L_CONNECTOR  shift 261
	L_CONSTRAINT  shift 262
	L_DEFINITION  shift 263
	L_DIMENSION  shift 264
	L_EQUATION  shift 265
	L_FUNCTION  shift 266
	L_IDENTIFIER  shift 53
	L_MODEL  shift 267
	L_PROPERTY  shift 268
	L_STRUCTURE  shift 269
	L_TYPE  shift 270
	L_UNIT  shift 271
	(  shift 258
	[  shift 259
	.  error

	type_spec  goto 294
	simple_name  goto 293
	name  goto 255
	def_designator  goto 257
	selected_name  goto 46
	selected_names  goto 54
	type_item  goto 558
	type_component  goto 254
	type_term  goto 256

state 476
	type_term:  ( types ).    (370)

	.  reduce 370 (src line 1101)


state 477
	type_term:  [ type_spec ].    (371)

	.  reduce 371 (src line 1103)


state 478
	qualifiers:  qualifiers , qualifier.    (275)

	.  reduce 275 (src line 833)


state 479
	qualifier:  pattern L_LARROW expr.    (273)

	.  reduce 273 (src line 828)


state 480
	property_names:  ( exprs ).    (271)

	.  reduce 271 (src line 823)


state 481
	property_names:  ( expr ).    (272)

	.  reduce 272 (src line 825)


state 482
	class_def:  class_header class_types class_body where_context.    (25)

	.  reduce 25 (src line 125)


state 483
	class_body:  { class_defs.} 

	}  shift 559
	.  error


state 484
	class_defs:  function_defs.    (26)
	function_defs:  function_defs.function_def ; 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_COERCION  shift 128
	L_DEFAULT  shift 132
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 135
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  reduce 26 (src line 132)

	expr  goto 134
	simple_name  goto 45
	name  goto 136
	case_expr  goto 10
	cond_expr  goto 11
	label  goto 131
	value_def  goto 487
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	function_def  goto 560
	name_def  goto 486
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	named_values  goto 129
	names  goto 133
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	value_def_target  goto 130

state 485
	function_defs:  function_def.; 

	;  shift 561
	.  error


state 486
	function_def:  name_def.    (138)

	.  reduce 138 (src line 451)


state 487
	function_def:  value_def.    (139)

	.  reduce 139 (src line 453)


state 488
	dim_def:  L_DIMENSION L_IDENTIFIER dim_body unit_variations.    (104)

	.  reduce 104 (src line 357)


state 489
	unit_variations:  variations.    (376)

	.  reduce 376 (src line 1121)


state 490
	unit_variations:  empty.    (377)

	.  reduce 377 (src line 1123)


state 491
	variations:  L_VARIATIONS.variation_ids 

	L_IDENTIFIER  shift 563
	.  error

	variation_ids  goto 562

state 492
	dim_body:  = designation.    (105)

	.  reduce 105 (src line 362)


state 493
	instance_def:  instance_header instance_spec instance_body where_context.    (176)

	.  reduce 176 (src line 557)


state 494
	instance_body:  { value_defs.} 
	value_defs:  value_defs.value_def ; 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DEFAULT  shift 132
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 135
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	}  shift 564
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 134
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	label  goto 131
	value_def  goto 565
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	value_def_target  goto 130

state 495
	value_defs:  value_def.; 

	;  shift 566
	.  error


496: shift/reduce conflict (shift 395(0), red'n 362(0)) on ,
state 496
	type_specs:  type_specs., type_specs 
	type_specs:  type_specs , type_specs.    (362)

	,  shift 395
	.  reduce 362 (src line 1080)


state 497
	type_item:  simple_name L_COLONS type_spec.    (360)
	type_spec:  type_spec.L_RARROW type_component 
	type_spec:  type_spec.L_EQEQGT type_spec 

	L_EQEQGT  shift 368
	L_RARROW  shift 367
	.  reduce 360 (src line 1073)


state 498
	multiplier_spec:  L_MULTIPLIER L_IDENTIFIER = multiplier_tail.unit_variations 
	empty: .    (394)

	L_VARIATIONS  shift 491
	.  reduce 394 (src line 1169)

	empty  goto 490
	unit_variations  goto 567
	variations  goto 489

state 499
	multiplier_tail:  L_INTEGER.    (218)

	.  reduce 218 (src line 673)


state 500
	multiplier_tail:  L_FLOAT.    (219)

	.  reduce 219 (src line 675)


state 501
	struct_def:  struct_def_head struct_inclusion struct_conns struct_comps.struct_defs L_END struct_def_tail 
	empty: .    (394)

	L_ASSOCIATE  shift 188
	L_ATTRIBUTE  shift 198
	L_CASE  shift 23
	L_CHAR  shift 49
	L_COERCION  shift 128
	L_CONFIGURATION  shift 189
	L_CONNECT  shift 191
	L_CONSTRAINT  shift 192
	L_DEFAULT  shift 132
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_FOR  shift 205
	L_IDENTIFIER  shift 135
	L_IF  shift 204
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_SIGNAL  shift 199
	L_STRING  shift 50
	L_TABLE  shift 203
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  reduce 394 (src line 1169)

	expr  goto 193
	abs_prop_def  goto 171
	property_kind  goto 187
	simple_name  goto 45
	associate_def  goto 172
	name  goto 136
	case_expr  goto 10
	empty  goto 570
	struct_items  goto 569
	cond_expr  goto 11
	config_def  goto 173
	connections  goto 174
	label  goto 190
	constraint_def  goto 175
	value_def  goto 180
	derivative  goto 12
	op  goto 29
	equation_def  goto 176
	prefix_expr  goto 7
	for_generate_header  goto 201
	function_apply  goto 13
	simple_pattern_expr  goto 20
	name_def  goto 178
	generate_def  goto 177
	generate_header  goto 194
	if_generate_header  goto 200
	table_generate_header  goto 202
	struct_item  goto 571
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	named_values  goto 129
	names  goto 133
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	struct_defs  goto 568
	table_def  goto 179
	table_head  goto 195
	value_def_target  goto 130

state 502
	struct_comps:  components.    (314)

	.  reduce 314 (src line 949)


state 503
	struct_comps:  empty.    (315)

	.  reduce 315 (src line 951)


state 504
	components:  L_COMPONENTS.comp_defs L_END L_COMPONENTS ; 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 575
	comp_def  goto 573
	comp_def_head  goto 574
	comp_defs  goto 572

state 505
	conn_clause:  L_CONNECTORS conn_opt_names.; 

	;  shift 576
	.  error


state 506
	conn_opt_names:  conn_names.    (66)
	conn_names:  conn_names., simple_name 

	,  shift 577
	.  reduce 66 (src line 255)


state 507
	conn_opt_names:  empty.    (67)

	.  reduce 67 (src line 257)


state 508
	conn_names:  simple_name.    (69)

	.  reduce 69 (src line 265)


state 509
	unit_def:  L_UNIT L_IDENTIFIER L_OF name.eq_designation unit_convert unit_variations 
	empty: .    (394)

	=  shift 579
	.  reduce 394 (src line 1169)

	empty  goto 580
	eq_designation  goto 578

state 510
	abs_prop_def:  property_kind abs_prop_names : type_spec.    (6)
	type_spec:  type_spec.L_RARROW type_component 
	type_spec:  type_spec.L_EQEQGT type_spec 

	L_EQEQGT  shift 368
	L_RARROW  shift 367
	.  reduce 6 (src line 62)


state 511
	abs_prop_names:  abs_prop_names , simple_name.    (7)

	.  reduce 7 (src line 67)


state 512
	associate_defs:  associate_defs , name.    (17)

	.  reduce 17 (src line 98)


state 513
	config_def:  L_CONFIGURATION simple_name config_body L_END.config_def_tail 
	empty: .    (394)

	L_IDENTIFIER  shift 68
	(  shift 69
	.  reduce 394 (src line 1169)

	simple_name  goto 582
	empty  goto 583
	config_def_tail  goto 581

state 514
	config_body:  struct_config ;.    (58)

	.  reduce 58 (src line 230)


state 515
	comp_configs:  comp_configs comp_config.; 

	;  shift 584
	.  error


state 516
	comp_config:  L_FOR.simple_name L_USE comp_clause 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 585

517: shift/reduce conflict (shift 586(0), red'n 220(0)) on L_USE
state 517
	comp_config:  L_FOR simple_name.L_USE comp_clause 
	name:  simple_name.    (220)

	L_USE  shift 586
	.  reduce 220 (src line 678)


state 518
	struct_config:  L_FOR name.struct_config_body L_END struct_config_tail 

	L_FOR  shift 516
	L_USE  shift 589
	.  error

	comp_config  goto 410
	comp_configs  goto 588
	struct_config_body  goto 587

state 519
	comp_configs:  comp_config ;.    (40)

	.  reduce 40 (src line 174)


520: shift/reduce conflict (shift 412(0), red'n 70(0)) on ,
state 520
	conn_specs:  conn_specs., conn_specs 
	conn_specs:  conn_specs , conn_specs.    (70)

	,  shift 412
	.  reduce 70 (src line 270)


state 521
	constraint_def:  L_CONSTRAINT simple_name : expr.constraint_report 
	empty: .    (394)

	L_REPORT  shift 591
	.  reduce 394 (src line 1169)

	empty  goto 592
	constraint_report  goto 590

state 522
	generate_body:  generate_body generate_item.; 

	;  shift 593
	.  error


state 523
	generate_def:  generate_header L_GENERATE generate_body L_END.L_GENERATE 

	L_GENERATE  shift 594
	.  error


state 524
	generate_body:  generate_item ;.    (144)

	.  reduce 144 (src line 466)


state 525
	table_def:  table_head table_header table_column column_names.table_data table_tail 

	{  shift 596
	.  error

	table_data  goto 595

state 526
	column_names:  L_NAMES.ids ; 

	L_IDENTIFIER  shift 598
	.  error

	ids  goto 597

state 527
	column_header:  L_COLUMNS string_exprs.; 

	;  shift 599
	.  error


state 528
	string_exprs:  expr.| string_exprs 
	string_exprs:  expr.    (298)

	|  shift 600
	.  reduce 298 (src line 898)


state 529
	table_header:  L_TITLE expr ;.    (335)

	.  reduce 335 (src line 1002)


state 530
	specified_type_def:  L_TYPE type_header = type_specifier.where_context 
	empty: .    (394)

	L_WHERE  shift 370
	.  reduce 394 (src line 1169)

	empty  goto 371
	where_context  goto 601

state 531
	type_specifier:  constructed_type.    (367)

	.  reduce 367 (src line 1092)


state 532
	constructed_type:  constructors.    (76)
	constructed_type:  constructors.L_WITH { construct_defs } 
	constructors:  constructors.| type_constructor 

	L_WITH  shift 602
	|  shift 603
	.  reduce 76 (src line 289)


state 533
	constructors:  type_constructor.    (81)

	.  reduce 81 (src line 301)


state 534
	type_constructor:  type_component.op type_component 
	type_spec:  type_component.    (366)

	L_DOUBLE  shift 52
	L_OPERATOR  shift 51
	^  shift 43
	/  shift 41
	*  shift 42
	-  shift 44
	.  reduce 366 (src line 1089)

	op  goto 604
	operator  goto 40

state 535
	type_constructor:  type_spec.    (356)
	type_spec:  type_spec.L_RARROW type_component 
	type_spec:  type_spec.L_EQEQGT type_spec 

	L_EQEQGT  shift 368
	L_RARROW  shift 367
	.  reduce 356 (src line 1062)


state 536
	for_generate_header:  L_FOR L_EACH generate_obj_kind simple_name.for_tail 
	empty: .    (394)

	L_IN  shift 606
	.  reduce 394 (src line 1169)

	empty  goto 607
	for_tail  goto 605

state 537
	table_generate_header:  L_FOR L_EACH L_ROW L_IN.L_TABLE name 

	L_TABLE  shift 608
	.  error


state 538
	table_generate_header:  L_FOR L_EACH L_ROW simple_name.L_IN L_TABLE name 

	L_IN  shift 609
	.  error


state 539
	generate_obj_kind:  L_CONNECTION L_SET.    (152)

	.  reduce 152 (src line 488)


state 540
	hidings:  hidings ,.hidings 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 435
	hidings  goto 610

state 541
	indicator_exp:  op L_INTEGER indicator_post.    (114)

	.  reduce 114 (src line 386)


state 542
	indicator_post:  L_OPERATOR L_INTEGER.    (117)

	.  reduce 117 (src line 393)


state 543
	indicator_exp:  ( indicator_exp ).    (116)

	.  reduce 116 (src line 390)


state 544
	alternatives:  alternatives alternative ;.    (10)

	.  reduce 10 (src line 80)


state 545
	alt_rhs:  alt_rhs_guard where_clause.    (12)

	.  reduce 12 (src line 85)


state 546
	alt_rhs_guard:  L_RARROW expr.    (14)

	.  reduce 14 (src line 90)


state 547
	guard_alts:  guard_alts guard_alt.    (159)

	.  reduce 159 (src line 505)


state 548
	guard_alt:  | expr.L_RARROW expr 

	L_RARROW  shift 611
	.  error


state 549
	derivative:  L_DERIVATIVE ( L_IDENTIFIER ) ( expr ).    (99)

	.  reduce 99 (src line 344)


state 550
	integral:  L_INTEGRAL ( L_IDENTIFIER ) integral_expr ( expr.) 

	)  shift 612
	.  error


state 551
	integral_expr:  ( expr ,.expr ) 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 613
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 552
	name_def:  L_COERCION named_values L_COLONS type_spec where_context.    (222)

	.  reduce 222 (src line 683)


state 553
	function_defs:  function_defs.function_def ; 
	where_clause:  L_WHERE { function_defs.} 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_COERCION  shift 128
	L_DEFAULT  shift 132
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 135
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	}  shift 614
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 134
	simple_name  goto 45
	name  goto 136
	case_expr  goto 10
	cond_expr  goto 11
	label  goto 131
	value_def  goto 487
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	function_def  goto 560
	name_def  goto 486
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	named_values  goto 129
	names  goto 133
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	value_def_target  goto 130

state 554
	guard:  | expr = expr.    (158)

	.  reduce 158 (src line 502)


state 555
	class_constraints:  class_constraints., class_constraints 
	context:  { class_constraints.} 

	,  shift 615
	}  shift 616
	.  error


state 556
	class_constraints:  class_constraint.    (24)

	.  reduce 24 (src line 122)


state 557
	type_component:  name ( types ).    (352)

	.  reduce 352 (src line 1049)


state 558
	types:  types , type_item.    (350)

	.  reduce 350 (src line 1044)


state 559
	class_body:  { class_defs }.    (20)

	.  reduce 20 (src line 112)


state 560
	function_defs:  function_defs function_def.; 

	;  shift 617
	.  error


state 561
	function_defs:  function_def ;.    (141)

	.  reduce 141 (src line 458)


state 562
	variations:  L_VARIATIONS variation_ids.    (385)
	variation_ids:  variation_ids., variation_ids 

	,  shift 618
	.  reduce 385 (src line 1144)


state 563
	variation_ids:  L_IDENTIFIER.    (387)

	.  reduce 387 (src line 1149)


state 564
	instance_body:  { value_defs }.    (174)

	.  reduce 174 (src line 552)


state 565
	value_defs:  value_defs value_def.; 

	;  shift 619
	.  error


state 566
	value_defs:  value_def ;.    (382)

	.  reduce 382 (src line 1135)


state 567
	multiplier_spec:  L_MULTIPLIER L_IDENTIFIER = multiplier_tail unit_variations.    (217)

	.  reduce 217 (src line 668)


state 568
	struct_def:  struct_def_head struct_inclusion struct_conns struct_comps struct_defs.L_END struct_def_tail 

	L_END  shift 620
	.  error


state 569
	struct_defs:  struct_items.    (312)
	struct_items:  struct_items.struct_item ; 

	L_ASSOCIATE  shift 188
	L_ATTRIBUTE  shift 198
	L_CASE  shift 23
	L_CHAR  shift 49
	L_COERCION  shift 128
	L_CONFIGURATION  shift 189
	L_CONNECT  shift 191
	L_CONSTRAINT  shift 192
	L_DEFAULT  shift 132
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_FOR  shift 205
	L_IDENTIFIER  shift 135
	L_IF  shift 204
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_SIGNAL  shift 199
	L_STRING  shift 50
	L_TABLE  shift 203
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  reduce 312 (src line 944)

	expr  goto 193
	abs_prop_def  goto 171
	property_kind  goto 187
	simple_name  goto 45
	associate_def  goto 172
	name  goto 136
	case_expr  goto 10
	cond_expr  goto 11
	config_def  goto 173
	connections  goto 174
	label  goto 190
	constraint_def  goto 175
	value_def  goto 180
	derivative  goto 12
	op  goto 29
	equation_def  goto 176
	prefix_expr  goto 7
	for_generate_header  goto 201
	function_apply  goto 13
	simple_pattern_expr  goto 20
	name_def  goto 178
	generate_def  goto 177
	generate_header  goto 194
	if_generate_header  goto 200
	table_generate_header  goto 202
	struct_item  goto 621
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	named_values  goto 129
	names  goto 133
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	table_def  goto 179
	table_head  goto 195
	value_def_target  goto 130

state 570
	struct_defs:  empty.    (313)

	.  reduce 313 (src line 946)


state 571
	struct_items:  struct_item.; 

	;  shift 622
	.  error


state 572
	comp_defs:  comp_defs.comp_def ; 
	components:  L_COMPONENTS comp_defs.L_END L_COMPONENTS ; 

	L_END  shift 624
	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 575
	comp_def  goto 623
	comp_def_head  goto 574

state 573
	comp_defs:  comp_def.; 

	;  shift 625
	.  error


state 574
	comp_def:  comp_def_head.comp_name comp_include comp_def_opt 
	empty: .    (394)

	L_IDENTIFIER  shift 53
	(  shift 69
	.  reduce 394 (src line 1169)

	simple_name  goto 45
	name  goto 627
	empty  goto 628
	comp_name  goto 626
	selected_name  goto 46
	selected_names  goto 54

state 575
	comp_def_head:  simple_name.L_COLONS 

	L_COLONS  shift 629
	.  error


state 576
	conn_clause:  L_CONNECTORS conn_opt_names ;.    (65)

	.  reduce 65 (src line 252)


state 577
	conn_names:  conn_names ,.simple_name 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 630

state 578
	unit_def:  L_UNIT L_IDENTIFIER L_OF name eq_designation.unit_convert unit_variations 
	empty: .    (394)

	L_CONVERSION  shift 632
	.  reduce 394 (src line 1169)

	empty  goto 633
	unit_convert  goto 631

state 579
	eq_designation:  =.designation 

	\'  shift 66
	.  error

	designation  goto 634

state 580
	eq_designation:  empty.    (120)

	.  reduce 120 (src line 400)


state 581
	config_def:  L_CONFIGURATION simple_name config_body L_END config_def_tail.    (60)

	.  reduce 60 (src line 235)


state 582
	config_def_tail:  simple_name.    (61)

	.  reduce 61 (src line 242)


state 583
	config_def_tail:  empty.    (62)

	.  reduce 62 (src line 244)


state 584
	comp_configs:  comp_configs comp_config ;.    (39)

	.  reduce 39 (src line 172)


state 585
	comp_config:  L_FOR simple_name.L_USE comp_clause 

	L_USE  shift 586
	.  error


state 586
	comp_config:  L_FOR simple_name L_USE.comp_clause 

	L_CASE  shift 640
	L_IDENTIFIER  shift 53
	L_IF  shift 639
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 636
	comp_case_clause  goto 638
	comp_clause  goto 635
	comp_if_clause  goto 637
	selected_name  goto 46
	selected_names  goto 54

state 587
	struct_config:  L_FOR name struct_config_body.L_END struct_config_tail 

	L_END  shift 641
	.  error


state 588
	comp_configs:  comp_configs.comp_config ; 
	struct_config_body:  comp_configs.    (304)

	L_FOR  shift 516
	.  reduce 304 (src line 917)

	comp_config  goto 515

state 589
	struct_config_body:  L_USE.name 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 642
	selected_name  goto 46
	selected_names  goto 54

state 590
	constraint_def:  L_CONSTRAINT simple_name : expr constraint_report.    (73)

	.  reduce 73 (src line 278)


state 591
	constraint_report:  L_REPORT.expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 643
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 592
	constraint_report:  empty.    (75)

	.  reduce 75 (src line 286)


state 593
	generate_body:  generate_body generate_item ;.    (143)

	.  reduce 143 (src line 464)


state 594
	generate_def:  generate_header L_GENERATE generate_body L_END L_GENERATE.    (145)

	.  reduce 145 (src line 469)


state 595
	table_def:  table_head table_header table_column column_names table_data.table_tail 
	empty: .    (394)

	L_END  shift 645
	.  reduce 394 (src line 1169)

	empty  goto 646
	table_tail  goto 644

state 596
	table_data:  {.{ table_data_rows } } 
	table_data:  {.{ } } 

	{  shift 647
	.  error


state 597
	column_names:  L_NAMES ids.; 

	;  shift 648
	.  error


state 598
	ids:  L_IDENTIFIER.| ids 
	ids:  L_IDENTIFIER.    (166)

	|  shift 649
	.  reduce 166 (src line 530)


state 599
	column_header:  L_COLUMNS string_exprs ;.    (29)

	.  reduce 29 (src line 141)


state 600
	string_exprs:  expr |.string_exprs 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 528
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	string_exprs  goto 650
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 601
	specified_type_def:  L_TYPE type_header = type_specifier where_context.    (296)

	.  reduce 296 (src line 891)


state 602
	constructed_type:  constructors L_WITH.{ construct_defs } 

	{  shift 651
	.  error


state 603
	constructors:  constructors |.type_constructor 

	L_COMPONENT  shift 260
	L_CONNECTOR  shift 261
	L_CONSTRAINT  shift 262
	L_DEFINITION  shift 263
	L_DIMENSION  shift 264
	L_EQUATION  shift 265
	L_FUNCTION  shift 266
	L_IDENTIFIER  shift 53
	L_MODEL  shift 267
	L_PROPERTY  shift 268
	L_STRUCTURE  shift 269
	L_TYPE  shift 270
	L_UNIT  shift 271
	(  shift 258
	[  shift 259
	.  error

	type_spec  goto 535
	simple_name  goto 45
	name  goto 255
	type_constructor  goto 652
	def_designator  goto 257
	selected_name  goto 46
	selected_names  goto 54
	type_component  goto 534
	type_term  goto 256

state 604
	type_constructor:  type_component op.type_component 

	L_COMPONENT  shift 260
	L_CONNECTOR  shift 261
	L_CONSTRAINT  shift 262
	L_DEFINITION  shift 263
	L_DIMENSION  shift 264
	L_EQUATION  shift 265
	L_FUNCTION  shift 266
	L_IDENTIFIER  shift 53
	L_MODEL  shift 267
	L_PROPERTY  shift 268
	L_STRUCTURE  shift 269
	L_TYPE  shift 270
	L_UNIT  shift 271
	(  shift 258
	[  shift 259
	.  error

	simple_name  goto 45
	name  goto 255
	def_designator  goto 257
	selected_name  goto 46
	selected_names  goto 54
	type_component  goto 653
	type_term  goto 256

state 605
	for_generate_header:  L_FOR L_EACH generate_obj_kind simple_name for_tail.    (132)

	.  reduce 132 (src line 429)


state 606
	for_tail:  L_IN.generates 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 655
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	generates  goto 654
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 607
	for_tail:  empty.    (134)

	.  reduce 134 (src line 440)


state 608
	table_generate_header:  L_FOR L_EACH L_ROW L_IN L_TABLE.name 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 656
	selected_name  goto 46
	selected_names  goto 54

state 609
	table_generate_header:  L_FOR L_EACH L_ROW simple_name L_IN.L_TABLE name 

	L_TABLE  shift 657
	.  error


610: shift/reduce conflict (shift 540(0), red'n 163(0)) on ,
state 610
	hidings:  hidings., hidings 
	hidings:  hidings , hidings.    (163)

	,  shift 540
	.  reduce 163 (src line 519)


state 611
	guard_alt:  | expr L_RARROW.expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 658
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 612
	integral:  L_INTEGRAL ( L_IDENTIFIER ) integral_expr ( expr ).    (177)

	.  reduce 177 (src line 562)


state 613
	integral_expr:  ( expr , expr.) 

	)  shift 659
	.  error


state 614
	where_clause:  L_WHERE { function_defs }.    (391)

	.  reduce 391 (src line 1161)


state 615
	class_constraints:  class_constraints ,.class_constraints 
	empty: .    (394)

	L_COMPONENT  shift 260
	L_CONNECTOR  shift 261
	L_CONSTRAINT  shift 262
	L_DEFINITION  shift 263
	L_DIMENSION  shift 264
	L_EQUATION  shift 265
	L_FUNCTION  shift 266
	L_IDENTIFIER  shift 53
	L_MODEL  shift 267
	L_PROPERTY  shift 268
	L_STRUCTURE  shift 269
	L_TYPE  shift 270
	L_UNIT  shift 271
	(  shift 258
	[  shift 259
	.  reduce 394 (src line 1169)

	type_spec  goto 294
	simple_name  goto 293
	name  goto 255
	empty  goto 291
	class_constraint  goto 556
	instance_spec  goto 473
	class_constraints  goto 660
	def_designator  goto 257
	type_specs  goto 290
	selected_name  goto 46
	selected_names  goto 54
	type_item  goto 292
	type_component  goto 254
	type_term  goto 256

state 616
	context:  { class_constraints }.    (83)

	.  reduce 83 (src line 306)


state 617
	function_defs:  function_defs function_def ;.    (140)

	.  reduce 140 (src line 456)


state 618
	variation_ids:  variation_ids ,.variation_ids 

	L_IDENTIFIER  shift 563
	.  error

	variation_ids  goto 661

state 619
	value_defs:  value_defs value_def ;.    (381)

	.  reduce 381 (src line 1133)


state 620
	struct_def:  struct_def_head struct_inclusion struct_conns struct_comps struct_defs L_END.struct_def_tail 
	empty: .    (394)

	L_IDENTIFIER  shift 68
	(  shift 69
	.  reduce 394 (src line 1169)

	simple_name  goto 663
	empty  goto 664
	struct_def_tail  goto 662

state 621
	struct_items:  struct_items struct_item.; 

	;  shift 665
	.  error


state 622
	struct_items:  struct_item ;.    (320)

	.  reduce 320 (src line 963)


state 623
	comp_defs:  comp_defs comp_def.; 

	;  shift 666
	.  error


state 624
	components:  L_COMPONENTS comp_defs L_END.L_COMPONENTS ; 

	L_COMPONENTS  shift 667
	.  error


state 625
	comp_defs:  comp_def ;.    (48)

	.  reduce 48 (src line 203)


state 626
	comp_def:  comp_def_head comp_name.comp_include comp_def_opt 
	empty: .    (394)

	L_INCLUDES  shift 99
	.  reduce 394 (src line 1169)

	empty  goto 670
	comp_include  goto 668
	inclusions  goto 669

state 627
	comp_name:  name.    (52)

	.  reduce 52 (src line 214)


state 628
	comp_name:  empty.    (53)

	.  reduce 53 (src line 218)


state 629
	comp_def_head:  simple_name L_COLONS.    (42)

	.  reduce 42 (src line 188)


state 630
	conn_names:  conn_names , simple_name.    (68)

	.  reduce 68 (src line 260)


state 631
	unit_def:  L_UNIT L_IDENTIFIER L_OF name eq_designation unit_convert.unit_variations 
	empty: .    (394)

	L_VARIATIONS  shift 491
	.  reduce 394 (src line 1169)

	empty  goto 490
	unit_variations  goto 671
	variations  goto 489

state 632
	unit_convert:  L_CONVERSION.conversion_spec name 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 673
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	conversion_spec  goto 672
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 633
	unit_convert:  empty.    (374)

	.  reduce 374 (src line 1113)


state 634
	eq_designation:  = designation.    (119)

	.  reduce 119 (src line 398)


state 635
	comp_config:  L_FOR simple_name L_USE comp_clause.    (38)

	.  reduce 38 (src line 167)


state 636
	comp_clause:  name.    (35)

	.  reduce 35 (src line 160)


state 637
	comp_clause:  comp_if_clause.    (36)

	.  reduce 36 (src line 162)


state 638
	comp_clause:  comp_case_clause.    (37)

	.  reduce 37 (src line 164)


state 639
	comp_if_clause:  L_IF.expr L_THEN struct_clause comp_elseif_clause L_ELSE struct_clause L_END simple_name 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 674
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 640
	comp_case_clause:  L_CASE.expr L_OF { comp_alternatives L_ELSE struct_clause ; } L_END simple_name 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 675
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 641
	struct_config:  L_FOR name struct_config_body L_END.struct_config_tail 
	empty: .    (394)

	L_IDENTIFIER  shift 53
	(  shift 69
	.  reduce 394 (src line 1169)

	simple_name  goto 45
	name  goto 677
	empty  goto 678
	selected_name  goto 46
	selected_names  goto 54
	struct_config_tail  goto 676

state 642
	struct_config_body:  L_USE name.    (305)

	.  reduce 305 (src line 919)


state 643
	constraint_report:  L_REPORT expr.    (74)

	.  reduce 74 (src line 284)


state 644
	table_def:  table_head table_header table_column column_names table_data table_tail.    (331)

	.  reduce 331 (src line 987)


state 645
	table_tail:  L_END.simple_name 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 679

state 646
	table_tail:  empty.    (334)

	.  reduce 334 (src line 999)


state 647
	table_data:  { {.table_data_rows } } 
	table_data:  { {.} } 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	}  shift 681
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 685
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	table_data_rows  goto 680
	table_row  goto 682
	table_entries  goto 683
	table_entry  goto 684

state 648
	column_names:  L_NAMES ids ;.    (30)

	.  reduce 30 (src line 144)


state 649
	ids:  L_IDENTIFIER |.ids 

	L_IDENTIFIER  shift 598
	.  error

	ids  goto 686

state 650
	string_exprs:  expr | string_exprs.    (297)

	.  reduce 297 (src line 896)


state 651
	constructed_type:  constructors L_WITH {.construct_defs } 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DEFAULT  shift 132
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 135
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 134
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	label  goto 131
	construct_defs  goto 687
	value_def  goto 688
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	value_def_target  goto 130

state 652
	constructors:  constructors | type_constructor.    (80)

	.  reduce 80 (src line 299)


state 653
	type_constructor:  type_component op type_component.    (355)

	.  reduce 355 (src line 1060)


state 654
	for_tail:  L_IN generates.    (133)

	.  reduce 133 (src line 438)


state 655
	generates:  expr.    (142)

	.  reduce 142 (src line 461)


state 656
	table_generate_header:  L_FOR L_EACH L_ROW L_IN L_TABLE name.    (347)

	.  reduce 347 (src line 1032)


state 657
	table_generate_header:  L_FOR L_EACH L_ROW simple_name L_IN L_TABLE.name 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 689
	selected_name  goto 46
	selected_names  goto 54

state 658
	guard_alt:  | expr L_RARROW expr.    (161)

	.  reduce 161 (src line 510)


state 659
	integral_expr:  ( expr , expr ).    (178)

	.  reduce 178 (src line 565)


660: shift/reduce conflict (shift 615(0), red'n 23(0)) on ,
state 660
	class_constraints:  class_constraints., class_constraints 
	class_constraints:  class_constraints , class_constraints.    (23)

	,  shift 615
	.  reduce 23 (src line 120)


661: shift/reduce conflict (shift 618(0), red'n 386(0)) on ,
state 661
	variation_ids:  variation_ids., variation_ids 
	variation_ids:  variation_ids , variation_ids.    (386)

	,  shift 618
	.  reduce 386 (src line 1147)


state 662
	struct_def:  struct_def_head struct_inclusion struct_conns struct_comps struct_defs L_END struct_def_tail.    (306)

	.  reduce 306 (src line 925)


state 663
	struct_def_tail:  simple_name.    (308)

	.  reduce 308 (src line 936)


state 664
	struct_def_tail:  empty.    (309)

	.  reduce 309 (src line 938)


state 665
	struct_items:  struct_items struct_item ;.    (319)

	.  reduce 319 (src line 961)


state 666
	comp_defs:  comp_defs comp_def ;.    (47)

	.  reduce 47 (src line 201)


state 667
	components:  L_COMPONENTS comp_defs L_END L_COMPONENTS.; 

	;  shift 690
	.  error


state 668
	comp_def:  comp_def_head comp_name comp_include.comp_def_opt 
	empty: .    (394)

	L_DEFINITIONS  shift 692
	.  reduce 394 (src line 1169)

	empty  goto 693
	comp_def_opt  goto 691

state 669
	comp_include:  inclusions.    (54)
	inclusions:  inclusions.L_INCLUDES visibility_item ; 

	L_INCLUDES  shift 206
	.  reduce 54 (src line 221)


state 670
	comp_include:  empty.    (55)

	.  reduce 55 (src line 222)


state 671
	unit_def:  L_UNIT L_IDENTIFIER L_OF name eq_designation unit_convert unit_variations.    (375)

	.  reduce 375 (src line 1116)


state 672
	unit_convert:  L_CONVERSION conversion_spec.name 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 694
	selected_name  goto 46
	selected_names  goto 54

state 673
	conversion_spec:  expr.    (84)
	conversion_spec:  expr.L_INVERSE expr 

	L_INVERSE  shift 695
	.  reduce 84 (src line 309)


state 674
	comp_if_clause:  L_IF expr.L_THEN struct_clause comp_elseif_clause L_ELSE struct_clause L_END simple_name 

	L_THEN  shift 696
	.  error


state 675
	comp_case_clause:  L_CASE expr.L_OF { comp_alternatives L_ELSE struct_clause ; } L_END simple_name 

	L_OF  shift 697
	.  error


state 676
	struct_config:  L_FOR name struct_config_body L_END struct_config_tail.    (301)

	.  reduce 301 (src line 906)


state 677
	struct_config_tail:  name.    (302)

	.  reduce 302 (src line 912)


state 678
	struct_config_tail:  empty.    (303)

	.  reduce 303 (src line 914)


state 679
	table_tail:  L_END simple_name.    (333)

	.  reduce 333 (src line 997)


state 680
	table_data:  { { table_data_rows.} } 
	table_data_rows:  table_data_rows.table_row 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	}  shift 698
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 685
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	table_row  goto 699
	table_entries  goto 683
	table_entry  goto 684

state 681
	table_data:  { { }.} 

	}  shift 700
	.  error


state 682
	table_data_rows:  table_row.    (342)

	.  reduce 342 (src line 1019)


state 683
	table_entries:  table_entries.| table_entry 
	table_row:  table_entries.; 

	|  shift 701
	;  shift 702
	.  error


state 684
	table_entries:  table_entry.    (344)
	table_entry:  table_entry.expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  reduce 344 (src line 1024)

	expr  goto 703
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 685
	table_entry:  expr.    (345)

	.  reduce 345 (src line 1027)


state 686
	ids:  L_IDENTIFIER | ids.    (165)

	.  reduce 165 (src line 525)


state 687
	constructed_type:  constructors L_WITH { construct_defs.} 
	construct_defs:  construct_defs.value_def ; 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DEFAULT  shift 132
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 135
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	}  shift 704
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 134
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	label  goto 131
	value_def  goto 705
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	value_def_target  goto 130

state 688
	construct_defs:  value_def.; 

	;  shift 706
	.  error


state 689
	table_generate_header:  L_FOR L_EACH L_ROW simple_name L_IN L_TABLE name.    (348)

	.  reduce 348 (src line 1036)


state 690
	components:  L_COMPONENTS comp_defs L_END L_COMPONENTS ;.    (56)

	.  reduce 56 (src line 224)


state 691
	comp_def:  comp_def_head comp_name comp_include comp_def_opt.    (41)

	.  reduce 41 (src line 177)


state 692
	comp_def_opt:  L_DEFINITIONS.struct_items L_END comp_def_tail 

	L_ASSOCIATE  shift 188
	L_ATTRIBUTE  shift 198
	L_CASE  shift 23
	L_CHAR  shift 49
	L_COERCION  shift 128
	L_CONFIGURATION  shift 189
	L_CONNECT  shift 191
	L_CONSTRAINT  shift 192
	L_DEFAULT  shift 132
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_FOR  shift 205
	L_IDENTIFIER  shift 135
	L_IF  shift 204
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_SIGNAL  shift 199
	L_STRING  shift 50
	L_TABLE  shift 203
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 193
	abs_prop_def  goto 171
	property_kind  goto 187
	simple_name  goto 45
	associate_def  goto 172
	name  goto 136
	case_expr  goto 10
	struct_items  goto 707
	cond_expr  goto 11
	config_def  goto 173
	connections  goto 174
	label  goto 190
	constraint_def  goto 175
	value_def  goto 180
	derivative  goto 12
	op  goto 29
	equation_def  goto 176
	prefix_expr  goto 7
	for_generate_header  goto 201
	function_apply  goto 13
	simple_pattern_expr  goto 20
	name_def  goto 178
	generate_def  goto 177
	generate_header  goto 194
	if_generate_header  goto 200
	table_generate_header  goto 202
	struct_item  goto 571
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	named_values  goto 129
	names  goto 133
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	table_def  goto 179
	table_head  goto 195
	value_def_target  goto 130

state 693
	comp_def_opt:  empty.    (44)

	.  reduce 44 (src line 193)


state 694
	unit_convert:  L_CONVERSION conversion_spec name.    (373)

	.  reduce 373 (src line 1111)


state 695
	conversion_spec:  expr L_INVERSE.expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 708
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 696
	comp_if_clause:  L_IF expr L_THEN.struct_clause comp_elseif_clause L_ELSE struct_clause L_END simple_name 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 710
	struct_clause  goto 709
	selected_name  goto 46
	selected_names  goto 54

state 697
	comp_case_clause:  L_CASE expr L_OF.{ comp_alternatives L_ELSE struct_clause ; } L_END simple_name 

	{  shift 711
	.  error


state 698
	table_data:  { { table_data_rows }.} 

	}  shift 712
	.  error


state 699
	table_data_rows:  table_data_rows table_row.    (341)

	.  reduce 341 (src line 1017)


state 700
	table_data:  { { } }.    (340)

	.  reduce 340 (src line 1014)


state 701
	table_entries:  table_entries |.table_entry 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 685
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	table_entry  goto 713

state 702
	table_row:  table_entries ;.    (349)

	.  reduce 349 (src line 1041)


state 703
	table_entry:  table_entry expr.    (346)

	.  reduce 346 (src line 1029)


state 704
	constructed_type:  constructors L_WITH { construct_defs }.    (77)

	.  reduce 77 (src line 291)


state 705
	construct_defs:  construct_defs value_def.; 

	;  shift 714
	.  error


state 706
	construct_defs:  value_def ;.    (79)

	.  reduce 79 (src line 296)


state 707
	comp_def_opt:  L_DEFINITIONS struct_items.L_END comp_def_tail 
	struct_items:  struct_items.struct_item ; 

	L_ASSOCIATE  shift 188
	L_ATTRIBUTE  shift 198
	L_CASE  shift 23
	L_CHAR  shift 49
	L_COERCION  shift 128
	L_CONFIGURATION  shift 189
	L_CONNECT  shift 191
	L_CONSTRAINT  shift 192
	L_DEFAULT  shift 132
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_END  shift 715
	L_FLOAT  shift 48
	L_FOR  shift 205
	L_IDENTIFIER  shift 135
	L_IF  shift 204
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_SIGNAL  shift 199
	L_STRING  shift 50
	L_TABLE  shift 203
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 193
	abs_prop_def  goto 171
	property_kind  goto 187
	simple_name  goto 45
	associate_def  goto 172
	name  goto 136
	case_expr  goto 10
	cond_expr  goto 11
	config_def  goto 173
	connections  goto 174
	label  goto 190
	constraint_def  goto 175
	value_def  goto 180
	derivative  goto 12
	op  goto 29
	equation_def  goto 176
	prefix_expr  goto 7
	for_generate_header  goto 201
	function_apply  goto 13
	simple_pattern_expr  goto 20
	name_def  goto 178
	generate_def  goto 177
	generate_header  goto 194
	if_generate_header  goto 200
	table_generate_header  goto 202
	struct_item  goto 621
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	named_values  goto 129
	names  goto 133
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32
	table_def  goto 179
	table_head  goto 195
	value_def_target  goto 130

state 708
	conversion_spec:  expr L_INVERSE expr.    (85)

	.  reduce 85 (src line 311)


709: shift/reduce conflict (shift 717(0), red'n 394(0)) on L_ELSE
state 709
	comp_if_clause:  L_IF expr L_THEN struct_clause.comp_elseif_clause L_ELSE struct_clause L_END simple_name 
	empty: .    (394)

	L_ELSE  shift 717
	.  error

	empty  goto 718
	comp_elseif_clause  goto 716

state 710
	struct_clause:  name.    (299)
	struct_clause:  name.struct_config 

	L_FOR  shift 720
	.  reduce 299 (src line 901)

	struct_config  goto 719

state 711
	comp_case_clause:  L_CASE expr L_OF {.comp_alternatives L_ELSE struct_clause ; } L_END simple_name 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 122
	simple_name  goto 45
	pattern  goto 723
	name  goto 31
	case_expr  goto 10
	comp_alternatives  goto 721
	comp_alternative  goto 722
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 712
	table_data:  { { table_data_rows } }.    (339)

	.  reduce 339 (src line 1012)


state 713
	table_entries:  table_entries | table_entry.    (343)
	table_entry:  table_entry.expr 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  reduce 343 (src line 1022)

	expr  goto 703
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 714
	construct_defs:  construct_defs value_def ;.    (78)

	.  reduce 78 (src line 294)


state 715
	comp_def_opt:  L_DEFINITIONS struct_items L_END.comp_def_tail 
	empty: .    (394)

	L_IDENTIFIER  shift 68
	(  shift 69
	.  reduce 394 (src line 1169)

	simple_name  goto 725
	empty  goto 726
	comp_def_tail  goto 724

state 716
	comp_if_clause:  L_IF expr L_THEN struct_clause comp_elseif_clause.L_ELSE struct_clause L_END simple_name 

	L_ELSE  shift 727
	.  error


state 717
	comp_elseif_clause:  L_ELSE.L_IF expr L_THEN struct_clause comp_elseif_clause 

	L_IF  shift 728
	.  error


state 718
	comp_elseif_clause:  empty.    (50)

	.  reduce 50 (src line 208)


state 719
	struct_clause:  name struct_config.    (300)

	.  reduce 300 (src line 903)


state 720
	struct_config:  L_FOR.name struct_config_body L_END struct_config_tail 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 518
	selected_name  goto 46
	selected_names  goto 54

state 721
	comp_alternatives:  comp_alternatives.comp_alternative 
	comp_case_clause:  L_CASE expr L_OF { comp_alternatives.L_ELSE struct_clause ; } L_END simple_name 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_ELSE  shift 730
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 122
	simple_name  goto 45
	pattern  goto 723
	name  goto 31
	case_expr  goto 10
	comp_alternative  goto 729
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 722
	comp_alternatives:  comp_alternative.    (32)

	.  reduce 32 (src line 149)


state 723
	comp_alternative:  pattern.L_RARROW struct_clause ; 

	L_RARROW  shift 731
	.  error


state 724
	comp_def_opt:  L_DEFINITIONS struct_items L_END comp_def_tail.    (43)

	.  reduce 43 (src line 191)


state 725
	comp_def_tail:  simple_name.    (45)

	.  reduce 45 (src line 196)


state 726
	comp_def_tail:  empty.    (46)

	.  reduce 46 (src line 198)


state 727
	comp_if_clause:  L_IF expr L_THEN struct_clause comp_elseif_clause L_ELSE.struct_clause L_END simple_name 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 710
	struct_clause  goto 732
	selected_name  goto 46
	selected_names  goto 54

state 728
	comp_elseif_clause:  L_ELSE L_IF.expr L_THEN struct_clause comp_elseif_clause 

	L_CASE  shift 23
	L_CHAR  shift 49
	L_DERIVATIVE  shift 25
	L_DOUBLE  shift 52
	L_FLOAT  shift 48
	L_IDENTIFIER  shift 53
	L_IF  shift 24
	L_INTEGER  shift 47
	L_INTEGRAL  shift 26
	L_LET  shift 28
	L_OPERATOR  shift 51
	L_PRIMITIVE  shift 30
	L_STRING  shift 50
	^  shift 43
	~  shift 33
	(  shift 37
	/  shift 41
	*  shift 42
	\\  shift 27
	-  shift 44
	_  shift 34
	[  shift 38
	.  error

	expr  goto 733
	simple_name  goto 45
	name  goto 31
	case_expr  goto 10
	cond_expr  goto 11
	derivative  goto 12
	op  goto 29
	prefix_expr  goto 7
	function_apply  goto 13
	simple_pattern_expr  goto 20
	integral  goto 14
	lambda_abstract  goto 15
	let_expr  goto 16
	literal  goto 35
	selected_name  goto 46
	null  goto 36
	operator  goto 40
	operator_apply  goto 17
	physical_value  goto 18
	primitive_value  goto 19
	struct_func_create  goto 21
	typed_expr  goto 22
	property_names  goto 39
	selected_names  goto 54
	variable  goto 32

state 729
	comp_alternatives:  comp_alternatives comp_alternative.    (31)

	.  reduce 31 (src line 147)


state 730
	comp_case_clause:  L_CASE expr L_OF { comp_alternatives L_ELSE.struct_clause ; } L_END simple_name 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 710
	struct_clause  goto 734
	selected_name  goto 46
	selected_names  goto 54

state 731
	comp_alternative:  pattern L_RARROW.struct_clause ; 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 710
	struct_clause  goto 735
	selected_name  goto 46
	selected_names  goto 54

state 732
	comp_if_clause:  L_IF expr L_THEN struct_clause comp_elseif_clause L_ELSE struct_clause.L_END simple_name 

	L_END  shift 736
	.  error


state 733
	comp_elseif_clause:  L_ELSE L_IF expr.L_THEN struct_clause comp_elseif_clause 

	L_THEN  shift 737
	.  error


state 734
	comp_case_clause:  L_CASE expr L_OF { comp_alternatives L_ELSE struct_clause.; } L_END simple_name 

	;  shift 738
	.  error


state 735
	comp_alternative:  pattern L_RARROW struct_clause.; 

	;  shift 739
	.  error


state 736
	comp_if_clause:  L_IF expr L_THEN struct_clause comp_elseif_clause L_ELSE struct_clause L_END.simple_name 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 740

state 737
	comp_elseif_clause:  L_ELSE L_IF expr L_THEN.struct_clause comp_elseif_clause 

	L_IDENTIFIER  shift 53
	(  shift 69
	.  error

	simple_name  goto 45
	name  goto 710
	struct_clause  goto 741
	selected_name  goto 46
	selected_names  goto 54

state 738
	comp_case_clause:  L_CASE expr L_OF { comp_alternatives L_ELSE struct_clause ;.} L_END simple_name 

	}  shift 742
	.  error


state 739
	comp_alternative:  pattern L_RARROW struct_clause ;.    (33)

	.  reduce 33 (src line 152)


state 740
	comp_if_clause:  L_IF expr L_THEN struct_clause comp_elseif_clause L_ELSE struct_clause L_END simple_name.    (51)

	.  reduce 51 (src line 211)


741: shift/reduce conflict (shift 717(0), red'n 394(0)) on L_ELSE
state 741
	comp_elseif_clause:  L_ELSE L_IF expr L_THEN struct_clause.comp_elseif_clause 
	empty: .    (394)

	L_ELSE  shift 717
	.  error

	empty  goto 718
	comp_elseif_clause  goto 743

state 742
	comp_case_clause:  L_CASE expr L_OF { comp_alternatives L_ELSE struct_clause ; }.L_END simple_name 

	L_END  shift 744
	.  error


state 743
	comp_elseif_clause:  L_ELSE L_IF expr L_THEN struct_clause comp_elseif_clause.    (49)

	.  reduce 49 (src line 206)


state 744
	comp_case_clause:  L_CASE expr L_OF { comp_alternatives L_ELSE struct_clause ; } L_END.simple_name 

	L_IDENTIFIER  shift 68
	(  shift 69
	.  error

	simple_name  goto 745

state 745
	comp_case_clause:  L_CASE expr L_OF { comp_alternatives L_ELSE struct_clause ; } L_END simple_name.    (34)

	.  reduce 34 (src line 155)


98/255 terminals, 198/300 nonterminals
395/800 grammar rules, 746/2000 states
24 shift/reduce, 0 reduce/reduce conflicts reported
198/350 working sets used
memory: states,etc. 3452/30000, parser 5962/30000
394/600 distinct lookahead sets
1046 extra closures
2756 shift entries, 14 exceptions
576 goto entries
2423 entries saved by goto default
Optimizer space used: input 6468/30000, output 2566/30000
2566 table entries, 1107 zero
maximum spread: 98, maximum offset: 744
